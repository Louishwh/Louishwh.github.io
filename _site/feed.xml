<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Atomix</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 Nov 2019 16:34:21 +0800</pubDate>
    <lastBuildDate>Tue, 12 Nov 2019 16:34:21 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Libra结构</title>
        <description>&lt;h3 id=&quot;文件结构&quot;&gt;文件结构&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;admission_control
    &lt;ul&gt;
      &lt;li&gt;Libra的公共API接口，它用于接收来自客户端的公共gRPC请求&lt;/li&gt;
      &lt;li&gt;准入控制（AC）处理于来自客户的两种类型的请求
        &lt;ul&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;提交交易: 向关联的验证器提交交易
                &lt;ul&gt;
                  &lt;li&gt;验证过程&lt;/li&gt;
                &lt;/ul&gt;
                &lt;ul&gt;
                  &lt;li&gt;首先检查交易签名&lt;/li&gt;
                  &lt;li&gt;然后由vm_validator验证交易&lt;/li&gt;
                  &lt;li&gt;✅ 通过所有验证
                    &lt;ul&gt;
                      &lt;li&gt;发送到内存池
                        &lt;ul&gt;
                          &lt;li&gt;提交成功&lt;/li&gt;
                          &lt;li&gt;提交失败&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;更新最新分布式账本 - 查询存储，例如帐户状态，交易日志，验证等
                &lt;ul&gt;
                  &lt;li&gt;请求将直接传递到存储进行查询&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;benchmark
    &lt;ul&gt;
      &lt;li&gt;Libra的公共API接口，它用于接收来自客户端的公共gRPC请求&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;client
    &lt;ul&gt;
      &lt;li&gt;RPC客户端上的Rust的封装&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;common&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;config&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;consensus
    &lt;ul&gt;
      &lt;li&gt;共识协议组件使用LibraBFT共识协议进行状态机复制。&lt;/li&gt;
      &lt;li&gt;共识组件主要在 Actor 程序模块中实现
        &lt;ul&gt;
          &lt;li&gt;使用消息传递在不同的子组件之间进行通信&lt;/li&gt;
          &lt;li&gt;tokio 框架用作任务运行时&lt;/li&gt;
          &lt;li&gt;共识数据结构 BlockStore
            &lt;ul&gt;
              &lt;li&gt;TxnManager 是内存池组件的接口，支持拉取交易以及删除已提交的交易。&lt;/li&gt;
              &lt;li&gt;StateComputer 是访问执行组件的接口。&lt;/li&gt;
              &lt;li&gt;BlockStore 维护提议块树，块执行，投票，仲裁证书和持久存储。&lt;/li&gt;
              &lt;li&gt;EventProcessor 负责处理各个事件。&lt;/li&gt;
              &lt;li&gt;Pacemaker 负责共识协议的活跃性。&lt;/li&gt;
              &lt;li&gt;SafetyRules 负责共识协议的安全性。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;所有共识消息都由其创建者签名，并由其接收者验证。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;contributing&lt;/li&gt;
  &lt;li&gt;crypto
    &lt;ul&gt;
      &lt;li&gt;加密组件承载我们在Libra中使用的关于加密所有实现：散列，签名和密钥派生/生成。&lt;/li&gt;
      &lt;li&gt;Libra 使用几种密码算法:
        &lt;ul&gt;
          &lt;li&gt;SHA-3 作为主要的哈希函数。&lt;/li&gt;
          &lt;li&gt;X25519 用于密钥交换。&lt;/li&gt;
          &lt;li&gt;Ed25519 用于签名。&lt;/li&gt;
          &lt;li&gt;HKDF: 基于HMAC的Extract-and-Expand密钥衍生函数（HKDF），基于 RFC 5869。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;docker&lt;/li&gt;
  &lt;li&gt;documentation&lt;/li&gt;
  &lt;li&gt;executor
    &lt;ul&gt;
      &lt;li&gt;执行组件的主要实现&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;language
    &lt;ul&gt;
      &lt;li&gt;vm
        &lt;ul&gt;
          &lt;li&gt;虚拟机 (VM), 它包含字节码格式、字节码解释器和执行交易块的基础设施。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;bytecode_verifier
        &lt;ul&gt;
          &lt;li&gt;字节码验证器, 其中包含一个静态分析工具，用于拒绝无效的Move字节码。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;IR： intermediate representation
        &lt;ul&gt;
          &lt;li&gt;Move中间层表示编译器, 它将可读的程序文本编译成Move字节码.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;stdlib
        &lt;ul&gt;
          &lt;li&gt;标准库, 其中包含 LibraAccount 和 LibraCoin 等核心系统模块的Move IR代码。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;functional_tests
        &lt;ul&gt;
          &lt;li&gt;一些测试 ，用于虚拟机，字节码验证程序和编译器。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;compiler
        &lt;ul&gt;
          &lt;li&gt;Move IR编译器将Move IR编译为其字节码表示形式。&lt;/li&gt;
          &lt;li&gt;bytecode verifier: 验证编译后的字节码的语义。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;libra-node&lt;/li&gt;
  &lt;li&gt;libra-swarm&lt;/li&gt;
  &lt;li&gt;mempool
    &lt;ul&gt;
      &lt;li&gt;准入控制（AC）模块将交易发送到内存池(Mempool)&lt;/li&gt;
      &lt;li&gt;在共识模块提交之前，内存池将会把交易保留一段时间&lt;/li&gt;
      &lt;li&gt;共识模块从内存池获取交易，内存池不会将交易推向共识&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;network
    &lt;ul&gt;
      &lt;li&gt;网络组件向验证器的其他组件提供点对点网络服务。
        &lt;ul&gt;
          &lt;li&gt;RPC, 用于远程过程调用&lt;/li&gt;
          &lt;li&gt;DirectSend, 用于向单个接收方发送“即发即忘”样式的消息&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;网络组件使用
        &lt;ul&gt;
          &lt;li&gt;Multiaddr ：用于对等寻址的方案。&lt;/li&gt;
          &lt;li&gt;TCP ：用于可靠传输。&lt;/li&gt;
          &lt;li&gt;Noise ：用于身份验证和点对点加密。&lt;/li&gt;
          &lt;li&gt;Yamux ：在单个链接上多路复用子流（substreams）。&lt;/li&gt;
          &lt;li&gt;推送类型的 gossip ：用于对节点发现。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;网络组件中的不同子组件:
        &lt;ul&gt;
          &lt;li&gt;NetworkProvider
            &lt;ul&gt;
              &lt;li&gt;向客户端公开网络API。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Peer Manager 
  — 侦听入链接及主动连接网络上的其他对等节点。&lt;/li&gt;
          &lt;li&gt;Connectivity Manager
            &lt;ul&gt;
              &lt;li&gt;当且仅当它是符合条件的网络成员时，才能确保我们保持与节点的连接。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Discovery
  — 使用推送式来发现新的节点并更新现有节点的地址。&lt;/li&gt;
          &lt;li&gt;Health Checker 
  — 执行定期活动探测以确保对等/连接的健康状况。&lt;/li&gt;
          &lt;li&gt;Direct Send 
  — 允许向/从远程对等节点发送/接收消息。&lt;/li&gt;
          &lt;li&gt;RPC 
  — 允许向/从其他对等节点发送/接收RPC。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;rust-toolchain&lt;/li&gt;
  &lt;li&gt;scripts&lt;/li&gt;
  &lt;li&gt;state-synchronizer&lt;/li&gt;
  &lt;li&gt;storage
    &lt;ul&gt;
      &lt;li&gt;存储模块为Libra区块链上的所有数据集以及Libra Core内部使用的必要数据提供可靠和高效的持久存储。&lt;/li&gt;
      &lt;li&gt;存储模块目的:
        &lt;ul&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;保留区块链数据，特别是验证方通过共识协议达成一致的交易及其输出。&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;为任何查询提供一个带有Merkle证明的响应，该查询要求部分区块链数据。&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;target&lt;/li&gt;
  &lt;li&gt;terraform&lt;/li&gt;
  &lt;li&gt;testsuite&lt;/li&gt;
  &lt;li&gt;types&lt;/li&gt;
  &lt;li&gt;vm-validator&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 11 Nov 2019 12:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/11/11/Libra-%E7%BB%93%E6%9E%84/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/11/Libra-%E7%BB%93%E6%9E%84/</guid>
        
        <category>【Libra】</category>
        
        
        <category>【区块链】</category>
        
      </item>
    
      <item>
        <title>Rust标准库</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://doc.rust-lang.org/std/&quot;&gt;参考一&lt;/a&gt;
&lt;a href=&quot;https://blog.csdn.net/bbdxf/article/details/87890128&quot;&gt;参考二&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 06 Nov 2019 12:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/11/06/Rust%E6%A0%87%E5%87%86%E5%BA%93/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/06/Rust%E6%A0%87%E5%87%86%E5%BA%93/</guid>
        
        <category>【Rust】</category>
        
        
        <category>【编程语言】</category>
        
      </item>
    
      <item>
        <title>椭圆曲线加解密算法</title>
        <description>&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/e41bc1eb1d81&quot;&gt;数学原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;名称解释&quot;&gt;名称解释&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;椭圆曲线加密算法，即: Elliptic Curve Cryptography，简称ECC
    &lt;ul&gt;
      &lt;li&gt;基于椭圆曲线数学理论实现的一种非对称加密算法。&lt;/li&gt;
      &lt;li&gt;椭圆曲线在密码学中的使用，是1985年由Neal Koblitz和Victor Miller分别独立提出的。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;椭圆曲线签名算法，即: ECDSA&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 01 Nov 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/11/01/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%AF%86/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/11/01/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%AF%86/</guid>
        
        <category>【工具】</category>
        
        
        <category>【密码学】</category>
        
      </item>
    
      <item>
        <title>正则表达式</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.runoob.com/regexp/regexp-intro.html&quot;&gt;参考文档1&lt;/a&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3 id=&quot;本文解决四个问题&quot;&gt;本文解决四个问题&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;正则表达式能够干什么?&lt;/li&gt;
  &lt;li&gt;正则表达式怎么用?&lt;/li&gt;
  &lt;li&gt;有哪些常用的正则实际例子?&lt;/li&gt;
  &lt;li&gt;正则在Python、Swift、Kotlin中的使用方法?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;正则表达式能够干什么&quot;&gt;正则表达式能够干什么?&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;数据验证
    &lt;ul&gt;
      &lt;li&gt;字符串是否具有固定的格式&lt;/li&gt;
      &lt;li&gt;例如: 身份证号、手机号、邮箱、信用卡、BTC地址等&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;文本替换
    &lt;ul&gt;
      &lt;li&gt;识别出字符串内的特定文本, 删除或替换这些文本.&lt;/li&gt;
      &lt;li&gt;例如: 将html中的标签全部去除&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;提取子字符串
    &lt;ul&gt;
      &lt;li&gt;识别出符合特定文本, 并提取出来&lt;/li&gt;
      &lt;li&gt;获取网页中的所有URL、手机号、邮箱&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;正则表达式怎么用&quot;&gt;正则表达式怎么用?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;字符类型
    &lt;ul&gt;
      &lt;li&gt;普通字符
        &lt;ul&gt;
          &lt;li&gt;非打印字符&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;特殊字符
        &lt;ul&gt;
          &lt;li&gt;特殊
            &lt;ul&gt;
              &lt;li&gt;() 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。&lt;/li&gt;
              &lt;li&gt;. 匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。&lt;/li&gt;
              &lt;li&gt;[ 标记一个中括号表达式的开始。要匹配 [，请使用 [。&lt;/li&gt;
              &lt;li&gt;\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。&lt;/li&gt;
              &lt;li&gt;|	指明两项之间的一个选择。要匹配 |，请使用 \ |。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;限定符
            &lt;ul&gt;
              &lt;li&gt;含义: 指定正则表达式的一个给定组件必须要出现多少次才能满足匹配&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; 匹配前面的子表达式零次或多次。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; 匹配前面的子表达式一次或多次。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; 匹配前面的子表达式零次或一次。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{n}&lt;/code&gt; n是一个非负整数。匹配确定的 n 次。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{n,}&lt;/code&gt; n是一个非负整数。至少匹配n 次。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{n,m}&lt;/code&gt; m和n均为非负整数，其中n &amp;lt;= m。最少匹配 n 次且最多匹配 m 次。&lt;/li&gt;
              &lt;li&gt;⚠️ &lt;code class=&quot;highlighter-rouge&quot;&gt;*、+&lt;/code&gt; 限定符都是贪婪的, 在它们的后面加上一个?就可以实现非贪婪或最小匹配。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;定位符
            &lt;ul&gt;
              &lt;li&gt;含义: 定位符使您能够将正则表达式固定到行首或行尾。&lt;/li&gt;
              &lt;li&gt;^ 匹配输入字符串开始的位置。&lt;/li&gt;
              &lt;li&gt;$ 匹配输入字符串结尾的位置。&lt;/li&gt;
              &lt;li&gt;\b 匹配一个单词边界，即字与空格间的位置。&lt;/li&gt;
              &lt;li&gt;\B 非单词边界匹配。&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;运算符优先级
    &lt;ul&gt;
      &lt;li&gt;\	转义符&lt;/li&gt;
      &lt;li&gt;(), (?:), (?=), []			圆括号和方括号&lt;/li&gt;
      &lt;li&gt;*, +, ?, {n}, {n,}, {n,m}	  	限定符&lt;/li&gt;
      &lt;li&gt;^, $, \任何元字符、任何字符    	定位点和序列&lt;/li&gt;
      &lt;li&gt;|								替换，”或”操作&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;规则
    &lt;ul&gt;
      &lt;li&gt;基本模式匹配
        &lt;ul&gt;
          &lt;li&gt;^ $&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;字符簇
        &lt;ul&gt;
          &lt;li&gt;[[:alpha:]]	任何字母&lt;/li&gt;
          &lt;li&gt;[[:digit:]]	任何数字&lt;/li&gt;
          &lt;li&gt;[[:alnum:]]	任何字母和数字&lt;/li&gt;
          &lt;li&gt;[[:space:]]	任何空白字符&lt;/li&gt;
          &lt;li&gt;[[:upper:]]	任何大写字母&lt;/li&gt;
          &lt;li&gt;[[:lower:]]	任何小写字母&lt;/li&gt;
          &lt;li&gt;[[:punct:]]	任何标点符号&lt;/li&gt;
          &lt;li&gt;[[:xdigit:]]	任何16进制的数字，相当于[0-9a-fA-F]&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;确定重复出现
        &lt;ul&gt;
          &lt;li&gt;特殊字符 * 与 {0,} 是相等的，它们都代表着 0 个或多个前面的内容 。&lt;/li&gt;
          &lt;li&gt;所有包含一个以上的字母、数字或下划线的字符串
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^[a-zA-Z0-9_]{1,}$&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;所有的正整数
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^[1-9][0-9]{0,}$&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;所有的整数
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^\-{0,1}[0-9]{1,}$&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;所有的浮点数
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^[-]?[0-9]+\.?[0-9]+$&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-有哪些常用的正则实际例子&quot;&gt;3. 有哪些常用的正则实际例子?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;匹配双字节汉字:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[^u4e00-u9fa5]&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配中文字符
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[u4e00-u9fa5]&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配HTML标记:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;(S*?)[^&amp;gt;]*&amp;gt;.*?|&amp;lt;.*? /&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配HTML标签:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配空白行:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ns*r&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配首尾空白字符
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^s*|s*$&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配Email地址
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配网址URL的正则表达式：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://([w-]+.)+[w-]+(/[w- ./?%&amp;amp;=]*)?&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配国内电话号码：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9]{3}-[0-9]{8}|[0-9]{4}-[0-9]{7}&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配ip地址：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[1-2]?[0-9]{1,2}.[1-2]?[0-9]{1,2}.[1-2]?[0-9]{1,2}.[1-2]?[0-9]{1,2}&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;匹配26个英文字母字符串
    &lt;ul&gt;
      &lt;li&gt;^[A-Za-z]+$　&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;验证一年的12个月
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^(0?[1-9]|1[0-2])$&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;验证一个月的31天：
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^((0?[1-9])|((1|2)[0-9])|30|31)$&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-pythonswiftkotlin中的使用&quot;&gt;4. Python、Swift、Kotlin中的使用&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Python:
    &lt;blockquote&gt;
      &lt;p&gt;import re&lt;/p&gt;

      &lt;p&gt;re.match( r’&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;’, line, re.M | re.I)&lt;/p&gt;

      &lt;p&gt;re.findall(“&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”, “123444-1222”)&lt;/p&gt;

      &lt;p&gt;re.compile(“&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”).sub(‘replace string’, “origin string”)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Kotlin:
    &lt;blockquote&gt;
      &lt;p&gt;Regex(“&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”).matches(“string”)&lt;/p&gt;

      &lt;p&gt;Regex(“&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”).findAll(“&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;”)&lt;/p&gt;

      &lt;p&gt;Regex(“&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”).replace(“new string”, “replace string”)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Swift:
    &lt;blockquote&gt;
      &lt;p&gt;var string = “origin string”&lt;/p&gt;

      &lt;p&gt;let pattern = “&amp;lt;/?[a-zA-Z]+[^&amp;gt;&amp;lt;]*&amp;gt;”&lt;/p&gt;

      &lt;p&gt;let regex = try? NSRegularExpression(pattern: pattern, options: [])&lt;/p&gt;

      &lt;p&gt;if let results = regex?.matches(in: acount, options: [], range: NSRange(location: 0, length: acount.count)), results.count != 0 {&lt;/p&gt;

      &lt;p&gt;  for result in results{&lt;/p&gt;

      &lt;p&gt;     let string = (acount as NSString).substring(with: result.range)&lt;/p&gt;

      &lt;p&gt;   }&lt;/p&gt;

      &lt;p&gt;}&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;正则不难很有用, 能积累点最好.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 30 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/30/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/30/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
        
        <category>【工具】</category>
        
        
        <category>【编程常识】</category>
        
      </item>
    
      <item>
        <title>深入理解操作系统2</title>
        <description>&lt;ol&gt;
  &lt;li&gt;进制转换
    &lt;ul&gt;
      &lt;li&gt;2进制 🏁&lt;/li&gt;
      &lt;li&gt;8进制 🏁&lt;/li&gt;
      &lt;li&gt;10进制 🏁&lt;/li&gt;
      &lt;li&gt;12进制&lt;/li&gt;
      &lt;li&gt;16进制 🏁&lt;/li&gt;
      &lt;li&gt;20进制&lt;/li&gt;
      &lt;li&gt;60进制&lt;/li&gt;
      &lt;li&gt;100进制&lt;/li&gt;
      &lt;li&gt;365进制&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 20 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/20/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/20/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F2/</guid>
        
        <category>【读书】</category>
        
        
        <category>【操作系统】</category>
        
      </item>
    
      <item>
        <title>深入理解操作系统1</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2019-10-19-深入理解操作系统.jpg&quot; alt=&quot;深入理解操作系统&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 19 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/19/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/19/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F1/</guid>
        
        <category>【读书】</category>
        
        
        <category>【操作系统】</category>
        
      </item>
    
      <item>
        <title>redis源码阅读</title>
        <description>&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt;

&lt;h2 id=&quot;学习方法&quot;&gt;学习方法&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/nawenqiang/article/details/78461031&quot;&gt;Redis源码分析&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blog.huangz.me/diary/2014/how-to-read-redis-source-code.html&quot;&gt;如何阅读 Redis 源码1&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://redissrc.readthedocs.io/en/latest/datastruct/sds.html&quot;&gt;如何阅读 Redis 源码2&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://redissrc.readthedocs.io/en/latest/#id3&quot;&gt;源码解析&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;git@gitee.com:klearner/redis.git&quot;&gt;注释代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;架构设计&quot;&gt;架构设计&lt;/h2&gt;

&lt;h2 id=&quot;代码结构&quot;&gt;代码结构&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;字符串&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;字典&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;链表&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;资料参考&quot;&gt;资料参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://redis.io/&quot;&gt;Redis官网&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/panpanwelcome/p/8483725.html&quot;&gt;Redis架构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/6ec58693ee21&quot;&gt;Redis架构相关原理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.51cto.com/13902811/2294162&quot;&gt;Redis主题架构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.runoob.com/w3cnote/redis-intro-data-structure.html&quot;&gt;Redis数据结构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 10 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/10/Redis%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/10/Redis%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
        
        <category>【必备技能】</category>
        
        
        <category>【源码阅读】</category>
        
      </item>
    
      <item>
        <title>开源组织和协议</title>
        <description>&lt;h2 id=&quot;开源基金会&quot;&gt;开源基金会&lt;/h2&gt;

&lt;h3 id=&quot;linux基金会&quot;&gt;&lt;a href=&quot;https://www.linuxfoundation.org/&quot;&gt;Linux基金会&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://linuxfoundation.cn/projects/&quot;&gt;开源项目&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://live-lforg.pantheonsite.io/projects/linux/&quot;&gt;linux&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/&quot;&gt;kubernetes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/jaegertracing/jaeger&quot;&gt;JAEGER&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.hyperledger.org/&quot;&gt;hyperledger&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;nodejs&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://xenproject.org/&quot;&gt;Xen project&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.odpi.org/&quot;&gt;ODPi&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;openstack基金会&quot;&gt;&lt;a href=&quot;https://www.openstack.org/foundation/&quot;&gt;OpenStack基金会&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/chengqiuming/article/details/79303254&quot;&gt;开源项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apache基金会&quot;&gt;&lt;a href=&quot;https://www.apache.org/index.html&quot;&gt;Apache基金会&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apache.org/index.html#news&quot;&gt;开源项目&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://activemq.apache.org/&quot;&gt;ActiveMQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://ant.apache.org/&quot;&gt;Ant&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://cassandra.apache.org/&quot;&gt;Cassandra&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://cordova.apache.org/&quot;&gt;Cordova&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://couchdb.apache.org/&quot;&gt;CouchDB&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://dubbo.apache.org/en-us/&quot;&gt;Dubbo&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://flume.apache.org/&quot;&gt;Flume&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://groovy.apache.org/&quot;&gt;Groovy&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;Hadoop&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://hive.apache.org/&quot;&gt;Hive&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://hbase.apache.org/&quot;&gt;HBase&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://jmeter.apache.org/&quot;&gt;Jmeter&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://kafka.apache.org/&quot;&gt;Kafka&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://kylin.apache.org/&quot;&gt;Kylin&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://maven.apache.org/&quot;&gt;Maven&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://netbeans.apache.org/&quot;&gt;NetBeans&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://pdfbox.apache.org/&quot;&gt;Perl&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://rocketmq.apache.org/&quot;&gt;RocketMQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://tomcat.apache.org/&quot;&gt;Tomcat&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://zookeeper.apache.org/&quot;&gt;Zookeeper&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;自由软件基金会fsf&quot;&gt;&lt;a href=&quot;https://www.fsf.org/&quot;&gt;自由软件基金会(FSF)&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/gnu/thegnuproject.html&quot;&gt;GNU计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;开源协议&quot;&gt;&lt;a href=&quot;https://www.oschina.net/question/12_2664&quot;&gt;开源协议&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/qwertyuiop_123abc/article/details/82110221#BSD%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE%EF%BC%88original%20BSD%20license%E3%80%81FreeBSD%20license%E3%80%81Original%20BSD%20license%EF%BC%89&quot;&gt;引用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bsd&quot;&gt;BSD&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fsf.org/licensing/licenses/index_html#OriginalBSD&quot;&gt;Original BSD license&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.freebsd.org/copyright/freebsd-license.html&quot;&gt;FreeBSD license&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。&lt;/p&gt;

&lt;p&gt;但”为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。&lt;/li&gt;
  &lt;li&gt;如果再发布的只是二进制类库/软件，则需要在类库软件的文档和版权声明中包含原来代码中的BSD协议。&lt;/li&gt;
  &lt;li&gt;不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对 商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。&lt;/p&gt;

&lt;h3 id=&quot;apache&quot;&gt;Apache&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache2.0&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.apache.org/LICENSE-1.1&quot;&gt;Apache1.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.apache.org/LICENSE-1.0&quot;&gt;Apache2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;需要给代码的用户一份Apache Licence&lt;/li&gt;
  &lt;li&gt;如果你修改了代码，需要再被修改的文件中说明。&lt;/li&gt;
  &lt;li&gt;在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。&lt;/li&gt;
  &lt;li&gt;如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。
Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;gplgnu-general-public-license&quot;&gt;GPL（GNU General Public License）&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fsf.org/licensing/licenses/gpl.html&quot;&gt;GPL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代 码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商 业软件公司开发的免费软件了。&lt;/p&gt;

&lt;p&gt;GPL协议的主要内容是只要在一个软件中使用(”使用”指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。&lt;/p&gt;

&lt;p&gt;由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。&lt;/p&gt;

&lt;p&gt;其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。&lt;/p&gt;

&lt;h3 id=&quot;lgplgnu-lesser-general-public-license&quot;&gt;LGPL（GNU Lesser General Public License）&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fsf.org/licensing/licenses/lgpl.html&quot;&gt;LGPL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL 允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并 发布和销售。&lt;/p&gt;

&lt;p&gt;但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源 代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。&lt;/p&gt;

&lt;p&gt;GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品&lt;/p&gt;

&lt;h3 id=&quot;mitmit&quot;&gt;MIT（MIT）&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;MIT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;开源不等于免费，开源也不等于没有约束。&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 10 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/10/%E5%BC%80%E6%BA%90%E7%BB%84%E7%BB%87%E4%B8%8E%E5%8D%8F%E8%AE%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/10/%E5%BC%80%E6%BA%90%E7%BB%84%E7%BB%87%E4%B8%8E%E5%8D%8F%E8%AE%AE/</guid>
        
        <category>【编程常识】</category>
        
        
        <category>【编程常识】</category>
        
      </item>
    
      <item>
        <title>架构学习资料</title>
        <description>&lt;h2 id=&quot;概要&quot;&gt;概要&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/XI2rMdeswhHStFcm7NFRPQ&quot;&gt;总的概述&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://c4model.com/&quot;&gt;C4模型&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/C4-architecture-model/&quot;&gt;软件C4模型&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.infoq.cn/article/crafting-architectural-diagrams/&quot;&gt;软件架构图艺术&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://agilemanifesto.org/&quot;&gt;敏捷宣言&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/09/%E6%9E%B6%E6%9E%84%E5%AD%A6%E4%B9%A0/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/09/%E6%9E%B6%E6%9E%84%E5%AD%A6%E4%B9%A0/</guid>
        
        <category>【必备技能】</category>
        
        
        <category>【软件架构】</category>
        
      </item>
    
      <item>
        <title>JVM系后端知识框架</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/2019-10-04Jvm后端.png&quot; alt=&quot;/images/2019-10-04Jvm后端.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;网关
    &lt;ul&gt;
      &lt;li&gt;Nginx
        &lt;ul&gt;
          &lt;li&gt;Kong&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;服务器
    &lt;ul&gt;
      &lt;li&gt;Tomcat&lt;/li&gt;
      &lt;li&gt;Netty&lt;/li&gt;
      &lt;li&gt;Jetty&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缓冲
    &lt;ul&gt;
      &lt;li&gt;RocketMQ&lt;/li&gt;
      &lt;li&gt;RabbitMQ&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;(https://www.cnblogs.com/panchanggui/p/9503666.html)&quot;&gt;缓存&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;CDN&lt;/li&gt;
      &lt;li&gt;Ehcache&lt;/li&gt;
      &lt;li&gt;Guava Cache&lt;/li&gt;
      &lt;li&gt;Redis&lt;/li&gt;
      &lt;li&gt;Memcached&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;编程语言
    &lt;ul&gt;
      &lt;li&gt;Java ✅&lt;/li&gt;
      &lt;li&gt;Kotlin ✅&lt;/li&gt;
      &lt;li&gt;Groovy ✅&lt;/li&gt;
      &lt;li&gt;Scala ✅&lt;/li&gt;
      &lt;li&gt;Clojure&lt;/li&gt;
      &lt;li&gt;Jython(python)&lt;/li&gt;
      &lt;li&gt;JRuby (ruby)&lt;/li&gt;
      &lt;li&gt;Ceylon&lt;/li&gt;
      &lt;li&gt;Eta&lt;/li&gt;
      &lt;li&gt;Haxe&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;持久化
    &lt;ul&gt;
      &lt;li&gt;MySQL&lt;/li&gt;
      &lt;li&gt;MongoDB&lt;/li&gt;
      &lt;li&gt;PostgreSQL&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;编程工具
    &lt;ul&gt;
      &lt;li&gt;编辑器
        &lt;ul&gt;
          &lt;li&gt;InteliJ IDEA&lt;/li&gt;
          &lt;li&gt;Eclipse&lt;/li&gt;
          &lt;li&gt;Vim&lt;/li&gt;
          &lt;li&gt;Emacs&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;运行环境
        &lt;ul&gt;
          &lt;li&gt;JVM&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;框架
        &lt;ul&gt;
          &lt;li&gt;Spring&lt;/li&gt;
          &lt;li&gt;SpringBoot&lt;/li&gt;
          &lt;li&gt;SprngCloud&lt;/li&gt;
          &lt;li&gt;Dropwizard&lt;/li&gt;
          &lt;li&gt;Dubbo&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;依赖管理工具
        &lt;ul&gt;
          &lt;li&gt;Ant&lt;/li&gt;
          &lt;li&gt;Maven&lt;/li&gt;
          &lt;li&gt;Gradle&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 04 Oct 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/10/04/JVM%E7%B3%BB%E5%90%8E%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/04/JVM%E7%B3%BB%E5%90%8E%E7%AB%AF%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</guid>
        
        <category>【必备技能】</category>
        
        
        <category>【软件架构】</category>
        
      </item>
    
  </channel>
</rss>
