<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Seeking truth from facts.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Aug 2019 12:46:16 +0800</pubDate>
    <lastBuildDate>Wed, 14 Aug 2019 12:46:16 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>iOS系统框架</title>
        <description>&lt;h4 id=&quot;apple系统框架&quot;&gt;&lt;a href=&quot;https://developer.apple.com/documentation/&quot;&gt;Apple系统框架&lt;/a&gt;&lt;/h4&gt;

&lt;h3 id=&quot;ios系统层级&quot;&gt;iOS系统层级&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;可触摸层（Cocoa Touch Layer）&lt;/li&gt;
  &lt;li&gt;媒体层（Media Layer）&lt;/li&gt;
  &lt;li&gt;核心服务层（Core Services Layer）&lt;/li&gt;
  &lt;li&gt;核心系统层（Core OS Layer）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/iOS系统层级1.jpg&quot; alt=&quot;iOS系统层级&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;各层的详情&quot;&gt;各层的详情&lt;/h3&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Cocoa Touch Layer
    &lt;ul&gt;
      &lt;li&gt;UIKit（界面相关）&lt;/li&gt;
      &lt;li&gt;EventKit（日历事件提醒等）&lt;/li&gt;
      &lt;li&gt;Notification Center（通知中心）&lt;/li&gt;
      &lt;li&gt;MapKit（地图显示）&lt;/li&gt;
      &lt;li&gt;Address Book（联系人）&lt;/li&gt;
      &lt;li&gt;iAd（广告）&lt;/li&gt;
      &lt;li&gt;Message UI（邮件与SMS显示）&lt;/li&gt;
      &lt;li&gt;PushKit（iOS8新push机制）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Media Layer&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;图像引擎
        &lt;ul&gt;
          &lt;li&gt;Core Graphics&lt;/li&gt;
          &lt;li&gt;Core Image&lt;/li&gt;
          &lt;li&gt;Core Animation&lt;/li&gt;
          &lt;li&gt;OpenGL ES&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;音频引擎
        &lt;ul&gt;
          &lt;li&gt;Core Audio&lt;/li&gt;
          &lt;li&gt;AV Foundation&lt;/li&gt;
          &lt;li&gt;OpenAL&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;视频引擎
        &lt;ul&gt;
          &lt;li&gt;AV Foundation&lt;/li&gt;
          &lt;li&gt;Core Media）&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Core Services Layer
    &lt;ul&gt;
      &lt;li&gt;CFNetwork（网络访问）&lt;/li&gt;
      &lt;li&gt;CoreData（数据存储）&lt;/li&gt;
      &lt;li&gt;CoreLocation（定位功能）&lt;/li&gt;
      &lt;li&gt;CoreMotion（重力加速度，陀螺仪）&lt;/li&gt;
      &lt;li&gt;Foundation（基础功能如NSString）&lt;/li&gt;
      &lt;li&gt;Webkit（浏览器引擎）&lt;/li&gt;
      &lt;li&gt;JavaScript（JavaScript引擎）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Core OS Layer
    &lt;ul&gt;
      &lt;li&gt;操作系统内核服务（BSD sockets、I/O访问、内存申请、文件系统、数学计算等）&lt;/li&gt;
      &lt;li&gt;本地认证（指纹识别验证等）&lt;/li&gt;
      &lt;li&gt;安全（提供管理证书、公钥、密钥等的接口）&lt;/li&gt;
      &lt;li&gt;加速 (执行数学、大数字以及DSP运算,这些接口iOS设备硬件相匹配）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/iOS系统层级2.png&quot; alt=&quot;iOS系统层级&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;很重要的几个框架&quot;&gt;很重要的几个框架&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Foundation
    &lt;ul&gt;
      &lt;li&gt;为所有的应用程序提供基本系统服务&lt;/li&gt;
      &lt;li&gt;你的应用程序，UIKit是建立在Foundation框架上面的。&lt;/li&gt;
      &lt;li&gt;Foundation框架是用Objective-C对Core Foundation框架里许多特性的封装。&lt;/li&gt;
      &lt;li&gt;使用Foundation可以:
        &lt;ul&gt;
          &lt;li&gt;创建和管理集合，比如：数组和字典&lt;/li&gt;
          &lt;li&gt;访问存储在应用程序里的图片和其它资源&lt;/li&gt;
          &lt;li&gt;创建和管理字符串&lt;/li&gt;
          &lt;li&gt;提交和接收通知&lt;/li&gt;
          &lt;li&gt;创建日期和时间对象&lt;/li&gt;
          &lt;li&gt;自动发现IP网络上的设备&lt;/li&gt;
          &lt;li&gt;操作URL流&lt;/li&gt;
          &lt;li&gt;执行异步代码&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;UIKit
    &lt;ul&gt;
      &lt;li&gt;框架提供创建基于触摸用户界面的类&lt;/li&gt;
      &lt;li&gt;所有的iOS应用程序都基于UIKit，你不能是应用程序脱离这个框架。&lt;/li&gt;
      &lt;li&gt;UIKit提供了在屏幕上绘制的机制，捕获事件，和创建通用用户界面元素。&lt;/li&gt;
      &lt;li&gt;UIKit也通过管理显示在屏幕上的组件来组织复杂的项目。&lt;/li&gt;
      &lt;li&gt;使用UIKit可以：
        &lt;ul&gt;
          &lt;li&gt;构建和管理你的用户界面&lt;/li&gt;
          &lt;li&gt;捕获触摸和基于移动的事件&lt;/li&gt;
          &lt;li&gt;呈现文字和web内容&lt;/li&gt;
          &lt;li&gt;优化你的多任务程序&lt;/li&gt;
          &lt;li&gt;创建定制的用户界面元素&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CoreData
    &lt;ul&gt;
      &lt;li&gt;框架管着理应用程序数据模型&lt;/li&gt;
      &lt;li&gt;Core Data提供对象的管理，使用CoreData，你可以创建模型对象，并管理这些对象。&lt;/li&gt;
      &lt;li&gt;你管理这些对象间的联系并修改数据。&lt;/li&gt;
      &lt;li&gt;CoreData提供的内建SQLlite技术可以高效的管理数据。&lt;/li&gt;
      &lt;li&gt;使用Core Data可以：
        &lt;ul&gt;
          &lt;li&gt;在库里存储和接收对象&lt;/li&gt;
          &lt;li&gt;提供基本的undo/redo&lt;/li&gt;
          &lt;li&gt;自动验证属性值&lt;/li&gt;
          &lt;li&gt;过滤、分组和优化内存中的数据&lt;/li&gt;
          &lt;li&gt;用[NSFetchedResultsController]管理表视图中的结果&lt;/li&gt;
          &lt;li&gt;支持基于文档的应用程序&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Core Graphics框架帮助你创建图形
    &lt;ul&gt;
      &lt;li&gt;高质量的图形对于所有的iOS应用程序都是很重要的。&lt;/li&gt;
      &lt;li&gt;在iOS中最简单且最快捷的创建图形的方式是使用UIKit框架提供的基于预渲染图形的视图和控件，然后让UIKit和iOS完成绘制。&lt;/li&gt;
      &lt;li&gt;当你需要创建复杂的图形时，Core Graphics则提供了更底层的库来帮助你。&lt;/li&gt;
      &lt;li&gt;使用Core Graphics可以：
        &lt;ul&gt;
          &lt;li&gt;创建基于路径的绘图&lt;/li&gt;
          &lt;li&gt;抗锯齿渲染&lt;/li&gt;
          &lt;li&gt;添加梯度、图片和颜色&lt;/li&gt;
          &lt;li&gt;Use coordinate-space transformations.&lt;/li&gt;
          &lt;li&gt;创建、显示和分析PDF文档&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Core Animation允许你创建高级的动画和虚拟效果
    &lt;ul&gt;
      &lt;li&gt;UIKit提供建立在Core Animation之上的动画。&lt;/li&gt;
      &lt;li&gt;如果你需要比UIKit能力更高级的功能，可以直接使用Core Animation。&lt;/li&gt;
      &lt;li&gt;Core Animation接口包含在QuartzCore框架里。&lt;/li&gt;
      &lt;li&gt;使用Core Animation可以创建嵌套的对象，并且可以对它们操作、旋转、缩放和转换。&lt;/li&gt;
      &lt;li&gt;使用Core animation，你可以创建动态的用户界面而不用使用更底层的图形API，如OpenGL ES。&lt;/li&gt;
      &lt;li&gt;使用Core Animation可以：
        &lt;ul&gt;
          &lt;li&gt;创建定制动画&lt;/li&gt;
          &lt;li&gt;添加定时函数和图形&lt;/li&gt;
          &lt;li&gt;支持帧动画&lt;/li&gt;
          &lt;li&gt;Specify graphical layout constraints.&lt;/li&gt;
          &lt;li&gt;Group multiple-layer changes into anatomic update.&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenGL ES 框架提供2D和3D绘图工具
    &lt;ul&gt;
      &lt;li&gt;OpenGL ES支持2D和3D绘图，Apple的OpenGL ES实现通过硬件提供了高速的全屏游戏式的应用程序。&lt;/li&gt;
      &lt;li&gt;使用OpenGL ES可以：
        &lt;ul&gt;
          &lt;li&gt;创建2D和3D图形&lt;/li&gt;
          &lt;li&gt;创建更复杂的图形，比如数据虚拟化、模拟飞行，或者视频游戏&lt;/li&gt;
          &lt;li&gt;访问底层图形设备&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;必用框架&quot;&gt;必用框架&lt;/h4&gt;

</description>
        <pubDate>Tue, 13 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/13/iOS%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/13/iOS%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>《去中心化应用》</title>
        <description>&lt;h4 id=&quot;索引&quot;&gt;索引&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;什么是去中心化应用?&lt;/li&gt;
  &lt;li&gt;去中心化生态系统&lt;/li&gt;
  &lt;li&gt;怎么创建你的去中心化应用?&lt;/li&gt;
  &lt;li&gt;实例OpenBazazaar?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;什么是去中心化应用&quot;&gt;什么是去中心化应用?&lt;/h3&gt;

&lt;h4 id=&quot;1-应用的分类&quot;&gt;1. 应用的分类&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;集中式&lt;/li&gt;
  &lt;li&gt;分布式&lt;/li&gt;
  &lt;li&gt;去中心化&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;能够达成去中心化共识的应用软件才是真正的革新成果.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-去中心化应用dapp的4个特征&quot;&gt;2. 去中心化应用(dapp)的4个特征&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;开源
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.zh-cn.html&quot;&gt;自由软件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;⚠️ 很多国内的程序猿对开源完全没概念,这一块要重点理解一下&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内部货币
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;去中心化共识
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;没有中心失效点
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-去中心化应用的历史&quot;&gt;3. 去中心化应用的历史&lt;/h4&gt;

&lt;h3 id=&quot;去中心化生态系统&quot;&gt;去中心化生态系统&lt;/h3&gt;

&lt;h3 id=&quot;怎么创建你的去中心化应用&quot;&gt;怎么创建你的去中心化应用?&lt;/h3&gt;

&lt;h3 id=&quot;实例openbazazaar&quot;&gt;实例OpenBazazaar?&lt;/h3&gt;
</description>
        <pubDate>Tue, 30 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</guid>
        
        <category>【书籍】</category>
        
        
        <category>【区块链】</category>
        
      </item>
    
      <item>
        <title>Swift</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;世界上没有最好的编程语言，就像世界上没有最好的人一样。&lt;/p&gt;

  &lt;p&gt;如果你想知道一门编程语言的优劣，那就去学会它。&lt;/p&gt;

&lt;/blockquote&gt;

</description>
        <pubDate>Sun, 28 Jul 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/28/Swift/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/28/Swift/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Kotlin</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;世界上没有最好的编程语言，就像世界上没有最好的人一样。&lt;/p&gt;

  &lt;p&gt;如果你想知道一门编程语言的优劣，那就去学会它。&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;用Kotlin也快一年，最近总觉的对它熟悉又陌生,不由的重新学习一下这门语言。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&quot;这门语言最舒服的地方&quot;&gt;这门语言最舒服的地方&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;可空类型：判空的代码省了&lt;/li&gt;
  &lt;li&gt;when，强大的分支结构：已知的编程语言中最强&lt;/li&gt;
  &lt;li&gt;if，可以做为表达式： 不用再另外生命变量&lt;/li&gt;
  &lt;li&gt;object，语法层面的单例&lt;/li&gt;
  &lt;li&gt;闭包，很实用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&quot;整体介绍&quot;&gt;整体介绍&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;开发工具
    &lt;ul&gt;
      &lt;li&gt;Intellij IDEA:&lt;/li&gt;
      &lt;li&gt;Sublime Text:&lt;/li&gt;
      &lt;li&gt;Vscode:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向过程
    &lt;ul&gt;
      &lt;li&gt;基本语法和规范
        &lt;ul&gt;
          &lt;li&gt;变量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;var a = “hello”&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;常量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;val a = “name”  // 运行期常量&lt;/li&gt;
                &lt;li&gt;const val co = “常量” //编译器常量,只能用于顶层常量或对象中的常量声明，只能是String和基础数据类型&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;注释
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;// 单行注释&lt;/li&gt;
                &lt;li&gt;/* 块注释 */&lt;/li&gt;
                &lt;li&gt;/* /&lt;em&gt;嵌套注释&lt;/em&gt;/ */&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
            &lt;ul&gt;
              &lt;li&gt;文件注释
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;版权信息&lt;/li&gt;
                    &lt;li&gt;许可信息&lt;/li&gt;
                    &lt;li&gt;描述&lt;/li&gt;
                    &lt;li&gt;历史版本&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;文档注释: 公开SDK
                &lt;ul&gt;
                  &lt;li&gt;Kdoc
                    &lt;blockquote&gt;
                      &lt;ul&gt;
                        &lt;li&gt;@author&lt;/li&gt;
                        &lt;li&gt;@deprecated&lt;/li&gt;
                        &lt;li&gt;@param&lt;/li&gt;
                        &lt;li&gt;@return&lt;/li&gt;
                        &lt;li&gt;@version&lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;代码注释: 阅读源码参考&lt;/li&gt;
              &lt;li&gt;地标注释: IDE提供的功能
                &lt;ul&gt;
                  &lt;li&gt;//TODO: 代码未完成&lt;/li&gt;
                  &lt;li&gt;//FIXME: 代码错误，待修正&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;命名规范
            &lt;ul&gt;
              &lt;li&gt;包名: 全小写，可用点分割&lt;/li&gt;
              &lt;li&gt;类名、接口: 大驼峰&lt;/li&gt;
              &lt;li&gt;文件名: 大驼峰&lt;/li&gt;
              &lt;li&gt;变量名: 小驼峰&lt;/li&gt;
              &lt;li&gt;编译器常量: 全大写，可以加下划线&lt;/li&gt;
              &lt;li&gt;函数名: 小驼峰&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;代码排版
            &lt;ul&gt;
              &lt;li&gt;空行
                &lt;ul&gt;
                  &lt;li&gt;代码注释之后（除尾端注释）&lt;/li&gt;
                  &lt;li&gt;函数内第一条语句之前&lt;/li&gt;
                  &lt;li&gt;一个函数内部两个逻辑段&lt;/li&gt;
                  &lt;li&gt;类声明或接口声明之间&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;空格
                &lt;ul&gt;
                  &lt;li&gt;赋值符号&lt;/li&gt;
                  &lt;li&gt;二元运算符&lt;/li&gt;
                  &lt;li&gt;小括号前后&lt;/li&gt;
                  &lt;li&gt;函数参数之间&lt;/li&gt;
                  &lt;li&gt;类继承，接口实现&lt;/li&gt;
                  &lt;li&gt;lambda表达式大括号左右&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;缩紧
                &lt;ul&gt;
                  &lt;li&gt;4个空格&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;断行
                &lt;ul&gt;
                  &lt;li&gt;逗号后，运算符前&lt;/li&gt;
                  &lt;li&gt;类声明时&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;省略
                &lt;ul&gt;
                  &lt;li&gt;分号&lt;/li&gt;
                  &lt;li&gt;省略Unit&lt;/li&gt;
                  &lt;li&gt;lambda参数&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;数据类型
        &lt;ul&gt;
          &lt;li&gt;整数
            &lt;ul&gt;
              &lt;li&gt;Byte
                &lt;ul&gt;
                  &lt;li&gt;8位&lt;/li&gt;
                  &lt;li&gt;-128～127&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Short
                &lt;ul&gt;
                  &lt;li&gt;16位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 15 ~ 2 ^ 15 - 1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Int
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 31 ~ 2 ^ 31 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Long
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 63 ~ 2 ^ 63 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;浮点数
            &lt;ul&gt;
              &lt;li&gt;Float
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;3.0F&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Double
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;默认小数为double&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;科学计数
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;3.14e15&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符类型
            &lt;ul&gt;
              &lt;li&gt;Kotlin字符采用双字节Unicode编码（16位）&lt;/li&gt;
              &lt;li&gt;可以使用16进制表示
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;val a = ‘A’&lt;/li&gt;
                    &lt;li&gt;val b = ‘\u0041’&lt;/li&gt;
                    &lt;li&gt;val c = ‘码’&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;制表符
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;\t  \u0009 Tab&lt;/li&gt;
                    &lt;li&gt;\n  \u000a 换行&lt;/li&gt;
                    &lt;li&gt;\r  \u000d 回车&lt;/li&gt;
                    &lt;li&gt;&quot;  \u0022 双引号&lt;/li&gt;
                    &lt;li&gt;'  \u0027 单引号&lt;/li&gt;
                    &lt;li&gt;\  \u005c 反斜线&lt;/li&gt;
                    &lt;li&gt;$  \u0024 美元符号&lt;/li&gt;
                    &lt;li&gt;\b  \u0008 退格&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;布尔类型
            &lt;ul&gt;
              &lt;li&gt;true&lt;/li&gt;
              &lt;li&gt;false&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;数据类型之间的转换
            &lt;ul&gt;
              &lt;li&gt;toXXX(): 转换函数&lt;/li&gt;
              &lt;li&gt;⚠️ 大范围转小范围会存在进度丢失的风险&lt;/li&gt;
              &lt;li&gt;隐式转换优先度: double &amp;gt; float &amp;gt; Long &amp;gt; Int&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;可空类型
            &lt;ul&gt;
              &lt;li&gt;防止空指针异常&lt;/li&gt;
              &lt;li&gt;可空运算
                &lt;ul&gt;
                  &lt;li&gt;安全调用运算 ?.&lt;/li&gt;
                  &lt;li&gt;as?&lt;/li&gt;
                  &lt;li&gt;Elvis运算符 ?:&lt;/li&gt;
                  &lt;li&gt;非空断言!!&lt;/li&gt;
                  &lt;li&gt;let&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符串类型
            &lt;ul&gt;
              &lt;li&gt;普通字符串&lt;/li&gt;
              &lt;li&gt;原始字符串
                &lt;ul&gt;
                  &lt;li&gt;可以包含任何字符，不能包含转移字符&lt;/li&gt;
                  &lt;li&gt;== 判断两个对象内容是否相等&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;不可变字符串
                &lt;ul&gt;
                  &lt;li&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;字符串操作
                &lt;ul&gt;
                  &lt;li&gt;拼接
                    &lt;ul&gt;
                      &lt;li&gt;a + b&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;模版
                    &lt;ul&gt;
                      &lt;li&gt;$x&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;查找
                    &lt;ul&gt;
                      &lt;li&gt;indexOf: 从x开始往后查&lt;/li&gt;
                      &lt;li&gt;lastIndexOf: 从x开始由后向前查&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;比较
                    &lt;ul&gt;
                      &lt;li&gt;相等&lt;/li&gt;
                      &lt;li&gt;比较大小&lt;/li&gt;
                      &lt;li&gt;比较前后缀&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串截取
                    &lt;ul&gt;
                      &lt;li&gt;区间截取: 左闭右开区间&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;可变字符串
                &lt;ul&gt;
                  &lt;li&gt;StringBuilder&lt;/li&gt;
                  &lt;li&gt;追加&lt;/li&gt;
                  &lt;li&gt;插入&lt;/li&gt;
                  &lt;li&gt;删除&lt;/li&gt;
                  &lt;li&gt;替换&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;正则表达式
                &lt;ul&gt;
                  &lt;li&gt;Regex&lt;/li&gt;
                  &lt;li&gt;字符串匹配
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).matchs(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串查找
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).find(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串替换
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).replace(&quot;123mmm&quot;, &quot;&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串分割
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).split(&quot;123mmm&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;运算符
        &lt;ul&gt;
          &lt;li&gt;算术运算符
            &lt;ul&gt;
              &lt;li&gt;一元运算符
                &lt;ul&gt;
                  &lt;li&gt;取反符号: &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自加: &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自减: &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;二元运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a + b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a - b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a * b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a / b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a % b&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;算术赋值运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a += 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a -= 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a *= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a /= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a %= 2&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;关系运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;== 、&amp;gt;、&amp;lt;、&amp;gt;=、&amp;lt;= 、===、!==&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;逻辑运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;、|| &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;位运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inv 位反&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;and 位与&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;or  位或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xor 位异或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shr 有符号右移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shl 左移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ushr 无符号右移&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;其他运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Class A : B()、()、[]、.=、?、?.、?:、!!、::、..、-&amp;gt; 、* &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;运算符优先级（从高到低）
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++ 、-- 、 . 、 ?. 、？&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-、 + 、 ++ 、-- 、！&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:、as、as?&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;* 、 / 、%&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+、-&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;中缀运算符&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Elvis运算符 ?:&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;in、!in、is、!is&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;、&amp;gt;、&amp;lt;=、&amp;gt;=&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==、!=、===、!==&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|| &lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=、+=、-=、*= 、/= 、%= &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;控制流
        &lt;ul&gt;
          &lt;li&gt;if
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if(true) a = 1&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = if(true) &quot;&quot; else null&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;when
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;when() {} &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = when(name)&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do {} while&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for () {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;break
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;break@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;continue
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;continue@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;函数
        &lt;ul&gt;
          &lt;li&gt;函数声明&lt;/li&gt;
          &lt;li&gt;命名参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;默认参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int, c: Int = 1): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b + c &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;可变参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(vararg numbers: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;var total = 0.0&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (number in numbers) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;total += number &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return total&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;表达式函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun area(x: Int, y: Int) = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;局部函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;匿名函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val oneF = fun(x: Int, y:Int): Int = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向对象
    &lt;ul&gt;
      &lt;li&gt;类&lt;/li&gt;
      &lt;li&gt;封装&lt;/li&gt;
      &lt;li&gt;继承&lt;/li&gt;
      &lt;li&gt;多态&lt;/li&gt;
      &lt;li&gt;抽象类/接口&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;函数式编程
    &lt;ul&gt;
      &lt;li&gt;高阶函数&lt;/li&gt;
      &lt;li&gt;Lambda&lt;/li&gt;
      &lt;li&gt;闭包&lt;/li&gt;
      &lt;li&gt;内联函数&lt;/li&gt;
      &lt;li&gt;范型&lt;/li&gt;
      &lt;li&gt;数据容器&lt;/li&gt;
      &lt;li&gt;函数式API&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;通用模式
    &lt;ul&gt;
      &lt;li&gt;异常处理&lt;/li&gt;
      &lt;li&gt;线程&lt;/li&gt;
      &lt;li&gt;协程&lt;/li&gt;
      &lt;li&gt;I/O&lt;/li&gt;
      &lt;li&gt;文件管理&lt;/li&gt;
      &lt;li&gt;网络编程&lt;/li&gt;
      &lt;li&gt;GUI编程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Java特性
    &lt;ul&gt;
      &lt;li&gt;反射&lt;/li&gt;
      &lt;li&gt;注解&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 21 Jul 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/21/Kotlin/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/21/Kotlin/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Apple那些事</title>
        <description>&lt;h3 id=&quot;证书申请那些事&quot;&gt;证书申请那些事&lt;/h3&gt;

&lt;h3 id=&quot;打包那些事&quot;&gt;打包那些事&lt;/h3&gt;

&lt;h3 id=&quot;苹果资源那些事&quot;&gt;苹果资源那些事&lt;/h3&gt;

&lt;h3 id=&quot;你可能不知的关于苹果的事&quot;&gt;你可能不知的关于苹果的事&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的敬仰&quot;&gt;对苹果的敬仰&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的惋惜&quot;&gt;对苹果的惋惜&lt;/h3&gt;

</description>
        <pubDate>Sat, 06 Jul 2019 08:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
        
        <category>【方法】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>如何学习一门编程语言？</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;先学习几门，然后总结，实践与理论相结合。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近几年学会了几门编程语言：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;C&lt;/li&gt;
  &lt;li&gt;Objective-C&lt;/li&gt;
  &lt;li&gt;C++&lt;/li&gt;
  &lt;li&gt;Java&lt;/li&gt;
  &lt;li&gt;Swift&lt;/li&gt;
  &lt;li&gt;Kotlin&lt;/li&gt;
  &lt;li&gt;Go&lt;/li&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;Ada&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;编程语言层次&quot;&gt;编程语言层次&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;你学习编程的目的&quot;&gt;你学习编程的目的？：&lt;/h5&gt;
    &lt;blockquote&gt;
      &lt;p&gt;编程就是为了解决问题&lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;ul&gt;
      &lt;li&gt;成为一名黑客？&lt;/li&gt;
      &lt;li&gt;成为一名架构师？
        &lt;ul&gt;
          &lt;li&gt;前端有木有？
            &lt;ul&gt;
              &lt;li&gt;Vue有木有？&lt;/li&gt;
              &lt;li&gt;React有木有？&lt;/li&gt;
              &lt;li&gt;Angular有木有？&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;后端有木有？
            &lt;ul&gt;
              &lt;li&gt;PHP有木有？&lt;/li&gt;
              &lt;li&gt;Java有木有？
                &lt;ul&gt;
                  &lt;li&gt;SpringBoot有木有？
                    &lt;ul&gt;
                      &lt;li&gt;netty?&lt;/li&gt;
                      &lt;li&gt;jetty?&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Python有木有？
                &lt;ul&gt;
                  &lt;li&gt;Django?&lt;/li&gt;
                  &lt;li&gt;Flask?&lt;/li&gt;
                  &lt;li&gt;Tornado?&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;数据持久化有木有？
                &lt;ul&gt;
                  &lt;li&gt;Mysql?&lt;/li&gt;
                  &lt;li&gt;Oracle&lt;/li&gt;
                  &lt;li&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;移动端有木有？
            &lt;ul&gt;
              &lt;li&gt;Android有木有？&lt;/li&gt;
              &lt;li&gt;iOS有木有？
                &lt;ul&gt;
                  &lt;li&gt;MVC?&lt;/li&gt;
                  &lt;li&gt;MVVM?
                    &lt;ul&gt;
                      &lt;li&gt;RxSwift?&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;MVP?&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;blockquote&gt;
      &lt;p&gt;目的决定态度，态度决定高度。&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;基础环境&quot;&gt;基础环境：&lt;/h5&gt;
    &lt;ol&gt;
      &lt;li&gt;安装语言的开发环境（编译器、解释器、IDE）&lt;/li&gt;
      &lt;li&gt;选一个适合自己的编辑器
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;Emacs&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;Sublime&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VScode&lt;/a&gt;
            &lt;blockquote&gt;
              &lt;p&gt;最好选一款编辑器用到很溜&lt;/p&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;语法层面&quot;&gt;语法层面：&lt;/h5&gt;
    &lt;ul&gt;
      &lt;li&gt;面向过程编程
        &lt;ol&gt;
          &lt;li&gt;关键字&lt;/li&gt;
          &lt;li&gt;代码规范&lt;/li&gt;
          &lt;li&gt;数据类型&lt;/li&gt;
          &lt;li&gt;运算符&lt;/li&gt;
          &lt;li&gt;流程控制&lt;/li&gt;
          &lt;li&gt;函数&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;面向对象编程
        &lt;ol&gt;
          &lt;li&gt;类&lt;/li&gt;
          &lt;li&gt;封装&lt;/li&gt;
          &lt;li&gt;继承&lt;/li&gt;
          &lt;li&gt;多态&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;函数式编程
        &lt;ol&gt;
          &lt;li&gt;高阶函数&lt;/li&gt;
          &lt;li&gt;Map、reduce、filter&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;设计模式&quot;&gt;设计模式：&lt;/h5&gt;
    &lt;ul&gt;
      &lt;li&gt;可参考书籍：
        &lt;ul&gt;
          &lt;li&gt;《Head First设计模式》&lt;/li&gt;
          &lt;li&gt;《23种设计模式》&lt;/li&gt;
          &lt;li&gt;《图解设计模式》&lt;/li&gt;
          &lt;li&gt;《Swift设计模式》&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;创建型
        &lt;ul&gt;
          &lt;li&gt;单例模式&lt;/li&gt;
          &lt;li&gt;工厂模式&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;结构型
        &lt;ul&gt;
          &lt;li&gt;门面模式&lt;/li&gt;
          &lt;li&gt;代理模式&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;行为型
        &lt;ul&gt;
          &lt;li&gt;观察者模式&lt;/li&gt;
          &lt;li&gt;命令模式&lt;/li&gt;
          &lt;li&gt;模版模式&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h5 id=&quot;架构设计&quot;&gt;架构设计：&lt;/h5&gt;
    &lt;ul&gt;
      &lt;li&gt;可参考书籍：
        &lt;ul&gt;
          &lt;li&gt;《从零开始学架构》&lt;/li&gt;
          &lt;li&gt;《聊聊架构》&lt;/li&gt;
          &lt;li&gt;《架构即未来》&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;开发人员架构设计
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;软件架构
  -
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;通用架构
  -
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sat, 06 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【方法论】</category>
        
      </item>
    
      <item>
        <title>iOS砸壳</title>
        <description>&lt;h3 id=&quot;砸壳是什么&quot;&gt;砸壳是什么？&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;软件脱壳
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;砸壳原理
    &lt;ul&gt;
      &lt;li&gt;应用加壳&lt;/li&gt;
      &lt;li&gt;应用砸壳
        &lt;ol&gt;
          &lt;li&gt;静态砸壳
            &lt;ul&gt;
              &lt;li&gt;需要知道壳应用的加密算法和逻辑后，对不运行的应用程序解密&lt;/li&gt;
              &lt;li&gt;难度大&lt;/li&gt;
              &lt;li&gt;很容易在破解后被改变&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;动态砸壳
            &lt;ul&gt;
              &lt;li&gt;从运行的进程内存空间中的可执行程序映像入手&lt;/li&gt;
              &lt;li&gt;将内存中的内容进行转储处理后实现脱壳处理&lt;/li&gt;
              &lt;li&gt;相对简单，且越过加密技术&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;iOS应用运行原理
    &lt;ul&gt;
      &lt;li&gt;应用壳&lt;/li&gt;
      &lt;li&gt;MachO&lt;/li&gt;
      &lt;li&gt;DYLD&lt;/li&gt;
      &lt;li&gt;共享缓存库
        &lt;ul&gt;
          &lt;li&gt;动态库&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;砸壳的工具&quot;&gt;砸壳的工具&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.i-funbox.com/&quot;&gt;iFunBox&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Clutch
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/KJCracks/Clutch/releases&quot;&gt;Clutch-Github&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/ab79a8a641dc&quot;&gt;介绍文件&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/b2f2e6575e0c&quot;&gt;dumpdecrypted&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/12407c198ff0&quot;&gt;frida-iOS-dump&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hopperapp.com/&quot;&gt;Hopper&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/b6737504c71e&quot;&gt;Hopper&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/b6737504c71e&quot;&gt;软件&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;引申问题&quot;&gt;引申问题&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;iOS/MacOS的内核了解？&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;相对安全：破解的成本 &amp;gt; 破解后的收获&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 06 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/iOS%E7%A0%B8%E5%A3%B3/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/iOS%E7%A0%B8%E5%A3%B3/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【技术】</category>
        
      </item>
    
      <item>
        <title>Gitlab&amp;runner</title>
        <description>
</description>
        <pubDate>Mon, 24 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/24/Gitlab&Runner/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/24/Gitlab&Runner/</guid>
        
        
      </item>
    
      <item>
        <title>Libra项目</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://libra.org/zh-CN/white-paper/#how-to-get-involved&quot;&gt;Libra白皮书&lt;/a&gt;
&lt;a href=&quot;https://developers.libra.org/&quot;&gt;Libra安装&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Jun 2019 21:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/20/Libra%E9%A1%B9%E7%9B%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/20/Libra%E9%A1%B9%E7%9B%AE/</guid>
        
        <category>六月</category>
        
        
        <category>【解读】</category>
        
      </item>
    
      <item>
        <title>Docker-MySQL</title>
        <description>
</description>
        <pubDate>Thu, 20 Jun 2019 21:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/20/Docker-MySQL/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/20/Docker-MySQL/</guid>
        
        <category>六月</category>
        
        
        <category>【读书】</category>
        
      </item>
    
  </channel>
</rss>
