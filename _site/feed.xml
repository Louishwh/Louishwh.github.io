<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Seeking truth from facts.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 30 Jul 2019 12:47:58 +0800</pubDate>
    <lastBuildDate>Tue, 30 Jul 2019 12:47:58 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title></title>
        <description>&lt;h3 id=&quot;内容概要&quot;&gt;内容概要&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 介绍
- 编译
- 文件结构介绍
- 基本操作
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;介绍&quot;&gt;介绍&lt;/h4&gt;

&lt;p&gt;XuperUion是超级链体系下的第一个开源项目，是构建超级联盟网络的底层方案。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;核心特点&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;高性能
        &lt;ul&gt;
          &lt;li&gt;原创的XuperModel模型，真正实现了智能合约的并发执行和验证。&lt;/li&gt;
          &lt;li&gt;TDPOS算法确保大规模节点下的快速共识。&lt;/li&gt;
          &lt;li&gt;使用AOT加速的WASM虚拟机，合约运行速度接近native程序。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;更安全
        &lt;ul&gt;
          &lt;li&gt;多私钥保护的账户体系。&lt;/li&gt;
          &lt;li&gt;鉴权支持权重累计、集合运算等灵活的策略。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;易扩展
        &lt;ul&gt;
          &lt;li&gt;鲁棒的P2P网络，支持广域网超大规模节点。&lt;/li&gt;
          &lt;li&gt;底层账本支持分叉管理，自动收敛一致性，实现真正全球化部署。&lt;/li&gt;
          &lt;li&gt;多语言开发智能合约&lt;/li&gt;
          &lt;li&gt;通过原创的XuperBridge技术，可插拔多语言虚拟机。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;高灵活性
        &lt;ul&gt;
          &lt;li&gt;可插拔、插件化的设计使得用户可以方便选择适合自己业务场景的解决方案。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;编译&quot;&gt;编译&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;系统配置
    &lt;ul&gt;
      &lt;li&gt;操作系统：支持Linux以及Mac OS&lt;/li&gt;
      &lt;li&gt;开发语言：Go 1.12.x及以上&lt;/li&gt;
      &lt;li&gt;编译器：GCC 4.8.x及以上&lt;/li&gt;
      &lt;li&gt;版本控制工具：Git&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;获取代码
    &lt;blockquote&gt;
      &lt;p&gt;git clone https://github.com/xuperchain/xuperunion&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;生成执行文件
    &lt;blockquote&gt;
      &lt;p&gt;cd xuperunion&lt;/p&gt;

      &lt;p&gt;make&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;编译完成
    &lt;ul&gt;
      &lt;li&gt;在output文件夹内部&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;文件结构介绍&quot;&gt;文件结构介绍&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;output
│
├── conf  	// 创始的共识采用tdpos模式，指定单一地址有权利出块
│  	│
│   ├── plugins.conf 		// 插件的配置信息
│  	│
│   ├── xchain.yaml.   		// xchain服务的配置信息
│  	│
│   └── xchain.yaml.sample 	// 防止冲突，部署时根据需要修改端口号
│  	
│  	
├── contractCall.sh
│
├── createAccount.sh
│
├── data  // 数据的存放目录,创世块信息，以及共识和合约的样例
│   │
│   ├── blockchain	// 账本目录
│   │   │
│   │   └── xuper
│   │       ├── ledger
│   │       │   ├── 000001.log
│   │       │   │
│   │       │   ├── CURRENT
│   │       │   │
│   │       │   ├── LOCK
│   │       │   │
│   │       │   ├── LOG
│   │       │   │
│   │       │   └── MANIFEST-000000
│   │       │   
│   │       ├── utxoVM
│   │       │   │
│   │       │   ├── 000001.log
│   │       │   │
│   │       │   ├── CURRENT
│   │       │   │
│   │       │   ├── LOCK
│   │       │   │
│   │       │   ├── LOG
│   │       │   │
│   │       │   └── MANIFEST-000000
│   │       │  	
│   │       └── xuper.json
│   │   	
│   ├── config	// 创始的共识采用tdpos模式，指定单一地址有权利出块
│   │  	│  	
│   │   ├── decay_demo.json
│   │  	│  	
│   │   ├── pmroot.json
│   │  	│  	
│   │   ├── pow.json
│   │  	│  	
│   │   ├── root_demo.json
│   │  	│  	
│   │   └── xuper.json
│   │  	
│   │  	
│   ├── keys // 此节点的地址，唯一性
│   │  	│  	
│   │   ├── address
│   │  	│  	
│   │   ├── private.key
│   │  	│  	
│   │   └── public.key
│   │  	
│   └── netkeys // 此节点的网络标识ID，唯一性
│      	│  	
│       └── net_private.key
│   
│   
├── deployContract.sh
│   
│   
├── dump_chain
│   
│   
├── logs  // 程序日志目录
│   │  	
│   ├── pluginmgr.log
│   │  	
│   ├── pluginmgr.log.wf
│   │  	
│   ├── xchain.log
│   │  	
│   └── xchain.log.wf
│   
│   
├── plugins	// so的存放目录
│   │   
│   ├── consensus
│   │   │   
│   │   ├── consensus-pow.so.1.0.0
│   │   │   
│   │   ├── consensus-single.so.1.0.0
│   │   │   
│   │   └── consensus-tdpos.so.1.0.0
│   │   
│   ├── contract
│   │   
│   ├── crypto
│   │   │   
│   │   └── crypto-default.so.1.0.0
│   │   
│   └── kv
│       │   
│       ├── kv-badger.so.1.0.0
│       │   
│       ├── kv-ldb-multi.so.1.0.0
│       │   
│       └── kv-ldb-single.so.1.0.0
│   
│   
├── testnet.conf
│       
├── transfer.sh
│       
├── wasm2c	// wasm工具
│       	
├── xchain  // 服务的二进制文件
│       
└── xchain-cli	// 客户端工具
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;链的操作&quot;&gt;链的操作&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;创建链
    &lt;blockquote&gt;
      &lt;p&gt;./xchain-cli createChain&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;启动服务
    &lt;blockquote&gt;
      &lt;p&gt;nohup ./xchain &amp;amp;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;观察区块
    &lt;blockquote&gt;
      &lt;p&gt;./xchain-cli status -H 127.0.0.1:37101&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;创建账号
    &lt;blockquote&gt;
      &lt;p&gt;./xchain-cli account newkeys –output data/accounts/louis&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;创建合约账号
    &lt;blockquote&gt;
      &lt;p&gt;./xchain-cli account new –desc account.des
合约内容如下:
&lt;code class=&quot;highlighter-rouge&quot;&gt;
 {
 &quot;module_name&quot;: &quot;xkernel&quot;,
 &quot;method_name&quot;: &quot;NewAccount&quot;,
 &quot;args&quot; : {
     &quot;account_name&quot;: &quot;1111111111111111&quot;,  //说明：16位数字组成的字符串
     &quot;acl&quot;: &quot;{
     		\&quot;pm\&quot;: {\&quot;rule\&quot;: 1,\&quot;acceptValue\&quot;: 0.6},
     		\&quot;aksWeight\&quot;: {\&quot;AK1\&quot;: 0.3,\&quot;AK2\&quot;: 0.3}}&quot;
 }
 }&lt;/code&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;资源链接&quot;&gt;资源链接&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://xchain.baidu.com/&quot;&gt;官网&lt;/a&gt;
&lt;a href=&quot;https://xuperchain.baidu.com/whitepaper&quot;&gt;白皮书&lt;/a&gt;
&lt;a href=&quot;https://github.com/xuperchain/xuperunion&quot;&gt;Github&lt;/a&gt;
&lt;a href=&quot;https://github.com/xuperchain/xuperunion/blob/master/CONTRIBUTING_CN.md&quot;&gt;贡献指南&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 30 Jul 2019 12:47:58 +0800</pubDate>
        <link>http://localhost:4000/2019/07/30/2019-06-16-%E7%99%BE%E5%BA%A6XuperChain/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/30/2019-06-16-%E7%99%BE%E5%BA%A6XuperChain/</guid>
        
        
      </item>
    
      <item>
        <title>《去中心化应用》</title>
        <description>&lt;h4 id=&quot;索引&quot;&gt;索引&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;什么是去中心化应用?&lt;/li&gt;
  &lt;li&gt;去中心化生态系统&lt;/li&gt;
  &lt;li&gt;怎么创建你的去中心化应用?&lt;/li&gt;
  &lt;li&gt;实例OpenBazazaar?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;什么是去中心化应用&quot;&gt;什么是去中心化应用?&lt;/h3&gt;

&lt;h4 id=&quot;1-应用的分类&quot;&gt;1. 应用的分类&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;集中式&lt;/li&gt;
  &lt;li&gt;分布式&lt;/li&gt;
  &lt;li&gt;去中心化&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;能够达成去中心化共识的应用软件才是真正的革新成果.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-去中心化应用dapp的4个特征&quot;&gt;2. 去中心化应用(dapp)的4个特征&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;开源
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.zh-cn.html&quot;&gt;自由软件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;⚠️ 很多国内的程序猿对开源完全没概念,这一块要重点理解一下&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内部货币
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;去中心化共识
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;没有中心失效点
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-去中心化应用的历史&quot;&gt;3. 去中心化应用的历史&lt;/h4&gt;

&lt;h3 id=&quot;去中心化生态系统&quot;&gt;去中心化生态系统&lt;/h3&gt;

&lt;h3 id=&quot;怎么创建你的去中心化应用&quot;&gt;怎么创建你的去中心化应用?&lt;/h3&gt;

&lt;h3 id=&quot;实例openbazazaar&quot;&gt;实例OpenBazazaar?&lt;/h3&gt;
</description>
        <pubDate>Tue, 30 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</guid>
        
        <category>【书籍】</category>
        
        
        <category>【区块链】</category>
        
      </item>
    
      <item>
        <title>高阶Python玩法</title>
        <description>
</description>
        <pubDate>Sun, 21 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/21/%E9%AB%98%E9%98%B6Python/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/21/%E9%AB%98%E9%98%B6Python/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Kotlin</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;世界上没有最好的编程语言，就像世界上没有最好的人一样。&lt;/p&gt;

  &lt;p&gt;如果你想知道一门编程语言的优劣，那就去学会它。&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;用Kotlin也快一年，最近总觉的对它熟悉又陌生,不由的重新学习一下这门语言。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&quot;这门语言最舒服的地方&quot;&gt;这门语言最舒服的地方&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;可空类型：判空的代码省了&lt;/li&gt;
  &lt;li&gt;when，强大的分支结构：已知的编程语言中最强&lt;/li&gt;
  &lt;li&gt;if，可以做为表达式： 不用再另外生命变量&lt;/li&gt;
  &lt;li&gt;object，语法层面的单例&lt;/li&gt;
  &lt;li&gt;闭包，很实用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&quot;整体介绍&quot;&gt;整体介绍&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;开发工具
    &lt;ul&gt;
      &lt;li&gt;Intellij IDEA:&lt;/li&gt;
      &lt;li&gt;Sublime Text:&lt;/li&gt;
      &lt;li&gt;Vscode:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向过程
    &lt;ul&gt;
      &lt;li&gt;基本语法和规范
        &lt;ul&gt;
          &lt;li&gt;变量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;var a = “hello”&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;常量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;val a = “name”  // 运行期常量&lt;/li&gt;
                &lt;li&gt;const val co = “常量” //编译器常量,只能用于顶层常量或对象中的常量声明，只能是String和基础数据类型&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;注释
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;// 单行注释&lt;/li&gt;
                &lt;li&gt;/* 块注释 */&lt;/li&gt;
                &lt;li&gt;/* /&lt;em&gt;嵌套注释&lt;/em&gt;/ */&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
            &lt;ul&gt;
              &lt;li&gt;文件注释
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;版权信息&lt;/li&gt;
                    &lt;li&gt;许可信息&lt;/li&gt;
                    &lt;li&gt;描述&lt;/li&gt;
                    &lt;li&gt;历史版本&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;文档注释: 公开SDK
                &lt;ul&gt;
                  &lt;li&gt;Kdoc
                    &lt;blockquote&gt;
                      &lt;ul&gt;
                        &lt;li&gt;@author&lt;/li&gt;
                        &lt;li&gt;@deprecated&lt;/li&gt;
                        &lt;li&gt;@param&lt;/li&gt;
                        &lt;li&gt;@return&lt;/li&gt;
                        &lt;li&gt;@version&lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;代码注释: 阅读源码参考&lt;/li&gt;
              &lt;li&gt;地标注释: IDE提供的功能
                &lt;ul&gt;
                  &lt;li&gt;//TODO: 代码未完成&lt;/li&gt;
                  &lt;li&gt;//FIXME: 代码错误，待修正&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;命名规范
            &lt;ul&gt;
              &lt;li&gt;包名: 全小写，可用点分割&lt;/li&gt;
              &lt;li&gt;类名、接口: 大驼峰&lt;/li&gt;
              &lt;li&gt;文件名: 大驼峰&lt;/li&gt;
              &lt;li&gt;变量名: 小驼峰&lt;/li&gt;
              &lt;li&gt;编译器常量: 全大写，可以加下划线&lt;/li&gt;
              &lt;li&gt;函数名: 小驼峰&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;代码排版
            &lt;ul&gt;
              &lt;li&gt;空行
                &lt;ul&gt;
                  &lt;li&gt;代码注释之后（除尾端注释）&lt;/li&gt;
                  &lt;li&gt;函数内第一条语句之前&lt;/li&gt;
                  &lt;li&gt;一个函数内部两个逻辑段&lt;/li&gt;
                  &lt;li&gt;类声明或接口声明之间&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;空格
                &lt;ul&gt;
                  &lt;li&gt;赋值符号&lt;/li&gt;
                  &lt;li&gt;二元运算符&lt;/li&gt;
                  &lt;li&gt;小括号前后&lt;/li&gt;
                  &lt;li&gt;函数参数之间&lt;/li&gt;
                  &lt;li&gt;类继承，接口实现&lt;/li&gt;
                  &lt;li&gt;lambda表达式大括号左右&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;缩紧
                &lt;ul&gt;
                  &lt;li&gt;4个空格&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;断行
                &lt;ul&gt;
                  &lt;li&gt;逗号后，运算符前&lt;/li&gt;
                  &lt;li&gt;类声明时&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;省略
                &lt;ul&gt;
                  &lt;li&gt;分号&lt;/li&gt;
                  &lt;li&gt;省略Unit&lt;/li&gt;
                  &lt;li&gt;lambda参数&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;数据类型
        &lt;ul&gt;
          &lt;li&gt;整数
            &lt;ul&gt;
              &lt;li&gt;Byte
                &lt;ul&gt;
                  &lt;li&gt;8位&lt;/li&gt;
                  &lt;li&gt;-128～127&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Short
                &lt;ul&gt;
                  &lt;li&gt;16位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 15 ~ 2 ^ 15 - 1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Int
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 31 ~ 2 ^ 31 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Long
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 63 ~ 2 ^ 63 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;浮点数
            &lt;ul&gt;
              &lt;li&gt;Float
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;3.0F&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Double
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;默认小数为double&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;科学计数
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;3.14e15&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符类型
            &lt;ul&gt;
              &lt;li&gt;Kotlin字符采用双字节Unicode编码（16位）&lt;/li&gt;
              &lt;li&gt;可以使用16进制表示
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;val a = ‘A’&lt;/li&gt;
                    &lt;li&gt;val b = ‘\u0041’&lt;/li&gt;
                    &lt;li&gt;val c = ‘码’&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;制表符
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;\t  \u0009 Tab&lt;/li&gt;
                    &lt;li&gt;\n  \u000a 换行&lt;/li&gt;
                    &lt;li&gt;\r  \u000d 回车&lt;/li&gt;
                    &lt;li&gt;&quot;  \u0022 双引号&lt;/li&gt;
                    &lt;li&gt;'  \u0027 单引号&lt;/li&gt;
                    &lt;li&gt;\  \u005c 反斜线&lt;/li&gt;
                    &lt;li&gt;$  \u0024 美元符号&lt;/li&gt;
                    &lt;li&gt;\b  \u0008 退格&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;布尔类型
            &lt;ul&gt;
              &lt;li&gt;true&lt;/li&gt;
              &lt;li&gt;false&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;数据类型之间的转换
            &lt;ul&gt;
              &lt;li&gt;toXXX(): 转换函数&lt;/li&gt;
              &lt;li&gt;⚠️ 大范围转小范围会存在进度丢失的风险&lt;/li&gt;
              &lt;li&gt;隐式转换优先度: double &amp;gt; float &amp;gt; Long &amp;gt; Int&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;可空类型
            &lt;ul&gt;
              &lt;li&gt;防止空指针异常&lt;/li&gt;
              &lt;li&gt;可空运算
                &lt;ul&gt;
                  &lt;li&gt;安全调用运算 ?.&lt;/li&gt;
                  &lt;li&gt;as?&lt;/li&gt;
                  &lt;li&gt;Elvis运算符 ?:&lt;/li&gt;
                  &lt;li&gt;非空断言!!&lt;/li&gt;
                  &lt;li&gt;let&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符串类型
            &lt;ul&gt;
              &lt;li&gt;普通字符串&lt;/li&gt;
              &lt;li&gt;原始字符串
                &lt;ul&gt;
                  &lt;li&gt;可以包含任何字符，不能包含转移字符&lt;/li&gt;
                  &lt;li&gt;== 判断两个对象内容是否相等&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;不可变字符串
                &lt;ul&gt;
                  &lt;li&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;字符串操作
                &lt;ul&gt;
                  &lt;li&gt;拼接
                    &lt;ul&gt;
                      &lt;li&gt;a + b&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;模版
                    &lt;ul&gt;
                      &lt;li&gt;$x&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;查找
                    &lt;ul&gt;
                      &lt;li&gt;indexOf: 从x开始往后查&lt;/li&gt;
                      &lt;li&gt;lastIndexOf: 从x开始由后向前查&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;比较
                    &lt;ul&gt;
                      &lt;li&gt;相等&lt;/li&gt;
                      &lt;li&gt;比较大小&lt;/li&gt;
                      &lt;li&gt;比较前后缀&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串截取
                    &lt;ul&gt;
                      &lt;li&gt;区间截取: 左闭右开区间&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;可变字符串
                &lt;ul&gt;
                  &lt;li&gt;StringBuilder&lt;/li&gt;
                  &lt;li&gt;追加&lt;/li&gt;
                  &lt;li&gt;插入&lt;/li&gt;
                  &lt;li&gt;删除&lt;/li&gt;
                  &lt;li&gt;替换&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;正则表达式
                &lt;ul&gt;
                  &lt;li&gt;Regex&lt;/li&gt;
                  &lt;li&gt;字符串匹配
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).matchs(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串查找
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).find(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串替换
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).replace(&quot;123mmm&quot;, &quot;&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串分割
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).split(&quot;123mmm&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;运算符
        &lt;ul&gt;
          &lt;li&gt;算术运算符
            &lt;ul&gt;
              &lt;li&gt;一元运算符
                &lt;ul&gt;
                  &lt;li&gt;取反符号: &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自加: &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自减: &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;二元运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a + b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a - b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a * b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a / b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a % b&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;算术赋值运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a += 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a -= 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a *= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a /= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a %= 2&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;关系运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;== 、&amp;gt;、&amp;lt;、&amp;gt;=、&amp;lt;= 、===、!==&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;逻辑运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;、|| &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;位运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inv 位反&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;and 位与&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;or  位或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xor 位异或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shr 有符号右移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shl 左移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ushr 无符号右移&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;其他运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Class A : B()、()、[]、.=、?、?.、?:、!!、::、..、-&amp;gt; 、* &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;运算符优先级（从高到低）
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++ 、-- 、 . 、 ?. 、？&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-、 + 、 ++ 、-- 、！&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:、as、as?&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;* 、 / 、%&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+、-&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;中缀运算符&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Elvis运算符 ?:&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;in、!in、is、!is&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;、&amp;gt;、&amp;lt;=、&amp;gt;=&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==、!=、===、!==&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|| &lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=、+=、-=、*= 、/= 、%= &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;控制流
        &lt;ul&gt;
          &lt;li&gt;if
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if(true) a = 1&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = if(true) &quot;&quot; else null&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;when
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;when() {} &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = when(name)&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do {} while&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for () {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;break
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;break@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;continue
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;continue@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;函数
        &lt;ul&gt;
          &lt;li&gt;函数声明&lt;/li&gt;
          &lt;li&gt;命名参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;默认参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int, c: Int = 1): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b + c &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;可变参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(vararg numbers: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;var total = 0.0&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (number in numbers) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;total += number &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return total&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;表达式函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun area(x: Int, y: Int) = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;局部函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;匿名函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val oneF = fun(x: Int, y:Int): Int = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向对象
    &lt;ul&gt;
      &lt;li&gt;类&lt;/li&gt;
      &lt;li&gt;封装&lt;/li&gt;
      &lt;li&gt;继承&lt;/li&gt;
      &lt;li&gt;多态&lt;/li&gt;
      &lt;li&gt;抽象类/接口&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;函数式编程
    &lt;ul&gt;
      &lt;li&gt;高阶函数&lt;/li&gt;
      &lt;li&gt;Lambda&lt;/li&gt;
      &lt;li&gt;闭包&lt;/li&gt;
      &lt;li&gt;内联函数&lt;/li&gt;
      &lt;li&gt;范型&lt;/li&gt;
      &lt;li&gt;数据容器&lt;/li&gt;
      &lt;li&gt;函数式API&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;通用模式
    &lt;ul&gt;
      &lt;li&gt;异常处理&lt;/li&gt;
      &lt;li&gt;线程&lt;/li&gt;
      &lt;li&gt;协程&lt;/li&gt;
      &lt;li&gt;I/O&lt;/li&gt;
      &lt;li&gt;文件管理&lt;/li&gt;
      &lt;li&gt;网络编程&lt;/li&gt;
      &lt;li&gt;GUI编程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Java特性
    &lt;ul&gt;
      &lt;li&gt;反射&lt;/li&gt;
      &lt;li&gt;注解&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sat, 06 Jul 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/Kotlin/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/Kotlin/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Apple那些事</title>
        <description>&lt;h3 id=&quot;证书申请那些事&quot;&gt;证书申请那些事&lt;/h3&gt;

&lt;h3 id=&quot;打包那些事&quot;&gt;打包那些事&lt;/h3&gt;

&lt;h3 id=&quot;苹果资源那些事&quot;&gt;苹果资源那些事&lt;/h3&gt;

&lt;h3 id=&quot;你可能不知的关于苹果的事&quot;&gt;你可能不知的关于苹果的事&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的敬仰&quot;&gt;对苹果的敬仰&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的惋惜&quot;&gt;对苹果的惋惜&lt;/h3&gt;

</description>
        <pubDate>Sat, 06 Jul 2019 08:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
        
        <category>【方法】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>Gitlab&amp;runner</title>
        <description>
</description>
        <pubDate>Mon, 24 Jun 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/24/Gitlab&Runner/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/24/Gitlab&Runner/</guid>
        
        
      </item>
    
      <item>
        <title>Libra项目</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://libra.org/zh-CN/white-paper/#how-to-get-involved&quot;&gt;Libra白皮书&lt;/a&gt;
&lt;a href=&quot;https://developers.libra.org/&quot;&gt;Libra安装&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Jun 2019 21:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/20/Libra%E9%A1%B9%E7%9B%AE/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/20/Libra%E9%A1%B9%E7%9B%AE/</guid>
        
        <category>六月</category>
        
        
        <category>【解读】</category>
        
      </item>
    
      <item>
        <title>Docker-MySQL</title>
        <description>
</description>
        <pubDate>Thu, 20 Jun 2019 21:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/20/Docker-MySQL/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/20/Docker-MySQL/</guid>
        
        <category>六月</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Web API的设计与开发</title>
        <description>
</description>
        <pubDate>Mon, 17 Jun 2019 21:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/17/Web-API%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/17/Web-API%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%BC%80%E5%8F%91/</guid>
        
        <category>六月</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>CentOS-Docker-Nginx-Web</title>
        <description>&lt;h3 id=&quot;问题定位&quot;&gt;问题定位&lt;/h3&gt;

&lt;h4 id=&quot;问题描述&quot;&gt;问题描述：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;最近部门部门各个系统的URL又更新了，原本浏览器就已经存的地址废除了。&lt;/li&gt;
  &lt;li&gt;所有人的地址都要更新地址：产品、前端、后端。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;解决方案&quot;&gt;解决方案：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;搭建一个小网站：包含需要的网址(URL资源中心)&lt;/li&gt;
  &lt;li&gt;配置简单的域名&lt;/li&gt;
  &lt;li&gt;更新部署方便&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;需要资源&quot;&gt;需要资源：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;前端小伙一枚（自己不想写前端界面）&lt;/li&gt;
  &lt;li&gt;服务器一台（可以要一台云主机）&lt;/li&gt;
  &lt;li&gt;域名一枚（内网的DNS）&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;流程解析&quot;&gt;流程解析&lt;/h3&gt;

&lt;h4 id=&quot;整体流程&quot;&gt;整体流程&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;给前端小伙说了目的（他也很支持）&lt;/li&gt;
  &lt;li&gt;大致画了简单的草图（简单草稿那种）&lt;/li&gt;
  &lt;li&gt;他搞定了界面：大概20分钟：主要是找URL花了较多时间&lt;/li&gt;
  &lt;li&gt;自己上传到公开的gitee仓库&lt;/li&gt;
  &lt;li&gt;我找李子要服务器：10分钟&lt;/li&gt;
  &lt;li&gt;安装Docker&lt;/li&gt;
  &lt;li&gt;拉Nginx镜像&lt;/li&gt;
  &lt;li&gt;启动容器：挂载文件&lt;/li&gt;
  &lt;li&gt;排查Server 500的错误(docker装vim)&lt;/li&gt;
  &lt;li&gt;愉快的成功了，小伙伴们分享😊&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;前端界面vuejs&quot;&gt;前端界面（Vue.js）&lt;/h4&gt;
&lt;p&gt;这个没学过，估计不难，最近优先学后端架构。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装dockercentos&quot;&gt;安装Docker（CentOS）&lt;/h4&gt;
&lt;p&gt;网上找到了这个&lt;a href=&quot;https://www.cnblogs.com/yufeng218/p/8370670.html&quot;&gt;教程很不错👍&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;查看内核版本（内核版本&amp;gt;3.10）：
    &lt;blockquote&gt;
      &lt;p&gt;uname -r&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;更新yum包(root权限)：
    &lt;blockquote&gt;
      &lt;p&gt;sudo yum update&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;卸载旧版本（可选）：
    &lt;blockquote&gt;
      &lt;p&gt;sudo yum remove docker  docker-common docker-selinux docker-engine&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;安装需要的软件包（yum-util提供yum-config-manager功能，另外两个是devicemapper驱动依赖的）
    &lt;blockquote&gt;
      &lt;p&gt;sudo yum install -y yum-utils device-mapper-persistent-data lvm2&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;设置yum源
    &lt;blockquote&gt;
      &lt;p&gt;sudo yum-config-manager -‌-add-repo https://download.docker.com/linux/centos/docker-ce.repo&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;查看所有仓库中所有docker版本，并选择特定版本安装
    &lt;blockquote&gt;
      &lt;p&gt;yum list docker-ce -‌-showduplicates&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;安装docker
    &lt;blockquote&gt;
      &lt;p&gt;sudo yum install docker-ce  # repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0&lt;/p&gt;

      &lt;p&gt;sudo yum install &lt;FQPN&gt;  # 例如：sudo yum install docker-ce-17.12.0.ce&lt;/FQPN&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;启动并加入开机启动
    &lt;blockquote&gt;
      &lt;p&gt;sudo systemctl start docker&lt;/p&gt;

      &lt;p&gt;sudo systemctl enable docker&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;验证安装是否成功(有client和service两部分表示docker安装启动都成功了)
    &lt;blockquote&gt;
      &lt;p&gt;docker version&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;docker拉取nginx镜像配置nginx&quot;&gt;Docker拉取Nginx镜像，配置Nginx&lt;/h4&gt;
&lt;p&gt;找的教程，一步一步来就能解决&lt;a href=&quot;https://www.cnblogs.combingo1024/p/9022890.html&quot;&gt;教程很全，不过有坑&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;拉取镜像
    &lt;blockquote&gt;
      &lt;p&gt;docker pull nginx&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;创建挂载目录
    &lt;blockquote&gt;
      &lt;p&gt;mkdir -p /data/nginx/{conf,conf.d,html,logs}&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;安装vim
    &lt;blockquote&gt;
      &lt;p&gt;yum install vim&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;配置文件&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;h6 id=&quot;vim-dataconfnginxconf&quot;&gt;vim /data/conf/nginx.conf&lt;/h6&gt;

  &lt;p&gt;user  nginx;&lt;/p&gt;

  &lt;p&gt;worker_processes  1;&lt;/p&gt;

  &lt;p&gt;error_log  /var/log/nginx/error.log warn;&lt;/p&gt;

  &lt;p&gt;pid        /var/run/nginx.pid;&lt;/p&gt;

  &lt;p&gt;events {&lt;/p&gt;

  &lt;p&gt;   worker_connections  1024;&lt;/p&gt;

  &lt;p&gt;}&lt;/p&gt;

  &lt;p&gt;http {&lt;/p&gt;

  &lt;p&gt;  include       /etc/nginx/mime.types;&lt;/p&gt;

  &lt;p&gt;  default_type  application/octet-stream;&lt;/p&gt;

  &lt;p&gt;  log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘&lt;/p&gt;

  &lt;p&gt;     ‘$status $body_bytes_sent “$http_referer” ‘&lt;/p&gt;

  &lt;p&gt;      ‘“$http_user_agent” “$http_x_forwarded_for”’;&lt;/p&gt;

  &lt;p&gt;   access_log  /var/log/nginx/access.log  main;&lt;/p&gt;

  &lt;p&gt;   sendfile        on;&lt;/p&gt;

  &lt;p&gt;   #tcp_nopush     on;&lt;/p&gt;

  &lt;p&gt;   keepalive_timeout  65;&lt;/p&gt;

  &lt;p&gt;   #gzip  on;&lt;/p&gt;

  &lt;p&gt;   include /etc/nginx/conf.d/*.conf;&lt;/p&gt;

  &lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h6 id=&quot;vim-dataconfnginxconf-1&quot;&gt;vim /data/conf/nginx.conf&lt;/h6&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;server {&lt;/p&gt;

  &lt;p&gt;listen       80;&lt;/p&gt;

  &lt;p&gt;server_name  localhost;&lt;/p&gt;

  &lt;p&gt;location / {&lt;/p&gt;

  &lt;p&gt;   root   /usr/share/nginx/html;&lt;/p&gt;

  &lt;p&gt;   index  index.html index.htm;&lt;/p&gt;

  &lt;p&gt;   autoindex  on;&lt;/p&gt;

  &lt;p&gt;  }&lt;/p&gt;

  &lt;p&gt;error_page   500 502 503 504  /50x.html;&lt;/p&gt;

  &lt;p&gt;location = /50x.html {&lt;/p&gt;

  &lt;p&gt;   root /usr/share/nginx/html;&lt;/p&gt;

  &lt;p&gt;   }&lt;/p&gt;

  &lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;整体流程-1&quot;&gt;整体流程&lt;/h4&gt;
&lt;p&gt;将容器中nginx的80端口映射到本地的80端口&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker run –name nginx81 -d -p 80:80&lt;/p&gt;

  &lt;p&gt;   -v /data/nginx/html:/usr/share/nginx/html&lt;/p&gt;

  &lt;p&gt;   -v /data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf&lt;/p&gt;

  &lt;p&gt;   -v /data/nginx/logs:/var/log/nginx&lt;/p&gt;

  &lt;p&gt;   -v /data/nginx/conf.d:/etc/nginx/conf.d&lt;/p&gt;

  &lt;p&gt;   -d nginx:latest&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;问题解析&quot;&gt;问题解析&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;nginx配置注意事项：
    &lt;blockquote&gt;
      &lt;p&gt;nginx配置的资源地址必须是容器内部的地址，即映射的内部地址&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;nginx错误定位：
    &lt;blockquote&gt;
      &lt;p&gt;在容器内查看错误日志：&lt;/p&gt;

      &lt;p&gt;tail -f  error.log&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;docker命令：
    &lt;blockquote&gt;
      &lt;p&gt;docker -p 宿主机端口：容器内端口 -v 宿主机文件路径：容器文件路径 -d 启动的镜像&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;整个过程大致花了一个小时：
    &lt;blockquote&gt;
      &lt;p&gt;主要耗时在：nginx的配置错误导致一直报500的错误(重定向错误)&lt;/p&gt;

      &lt;p&gt;问题定位不清楚，一直在纠结在挂载文件上(实际上是nginx的配置问题)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sat, 15 Jun 2019 21:50:00 +0800</pubDate>
        <link>http://localhost:4000/2019/06/15/CentOS-Docker-Nginx-Web/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/15/CentOS-Docker-Nginx-Web/</guid>
        
        <category>六月</category>
        
        
        <category>【小记】</category>
        
      </item>
    
  </channel>
</rss>
