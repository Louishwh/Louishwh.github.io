<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Seeking truth from facts.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 21 Aug 2019 09:33:38 +0800</pubDate>
    <lastBuildDate>Wed, 21 Aug 2019 09:33:38 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>架构与设计模式</title>
        <description>&lt;h4 id=&quot;依赖&quot;&gt;依赖&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/e5c69c7b8c00&quot;&gt;设计模式&lt;/a&gt;
&lt;a href=&quot;https://www.jianshu.com/p/7b5ca753ed6a&quot;&gt;iOS开发&lt;/a&gt;
&lt;a href=&quot;https://github.com/BohdanOrlov/iOS-Developer-Roadmap&quot;&gt;iOS技能树&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;索引&quot;&gt;索引&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;设计的六大原则&lt;/li&gt;
  &lt;li&gt;架构的目的与目标&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;设计的七大原则&quot;&gt;设计的七大原则&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;Single Responsibility Principle&lt;/td&gt;
      &lt;td&gt;单一职责原则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;Open Close Principle&lt;/td&gt;
      &lt;td&gt;开闭原则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;Liskov Substitution Principle&lt;/td&gt;
      &lt;td&gt;里氏替换原则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;Interface Segregation Principle&lt;/td&gt;
      &lt;td&gt;接口隔离原则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;Dependence Inversion Principle&lt;/td&gt;
      &lt;td&gt;依赖倒置原则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L&lt;/td&gt;
      &lt;td&gt;Law Of Demeter&lt;/td&gt;
      &lt;td&gt;迪米特法则&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;Composite/Aggregate Reuse Principle&lt;/td&gt;
      &lt;td&gt;CARP组合/聚合复用原则&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;⚠️ 面向对象SOLID原则&lt;/p&gt;

&lt;h4 id=&quot;单一职责原则&quot;&gt;单一职责原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;一个类只承担一个职责&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;开闭原则&quot;&gt;开闭原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;对软件实体的改动，最好用扩展而非修改的方式。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;里氏替换原则&quot;&gt;里氏替换原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;子类可以扩展父类的方法，但不应该复写父类的方法。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;接口隔离原则&quot;&gt;接口隔离原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;对象不应被强迫依赖它不使用的方法.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;依赖倒置原则&quot;&gt;依赖倒置原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;面向接口编程，提取出事务的本质和共性。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;迪米特法则&quot;&gt;迪米特法则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;一个对象应该对其他对象保持最少的了解，实现低耦合、高内聚。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;组合聚合复用原则&quot;&gt;组合/聚合复用原则&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;就是说要少用继承，多用合成关系来实现。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;架构的目的与目标&quot;&gt;架构的目的与目标&lt;/h3&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;架构的设计方法和步骤&quot;&gt;架构的设计方法和步骤&lt;/h3&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;常用的架构&quot;&gt;常用的架构&lt;/h3&gt;

&lt;h4 id=&quot;mvc&quot;&gt;MVC&lt;/h4&gt;

&lt;h4 id=&quot;mvvm&quot;&gt;MVVM&lt;/h4&gt;

&lt;h4 id=&quot;viper&quot;&gt;VIPER&lt;/h4&gt;

&lt;h4 id=&quot;mvp&quot;&gt;MVP&lt;/h4&gt;

</description>
        <pubDate>Tue, 20 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/20/%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/20/%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>CoreData</title>
        <description>
</description>
        <pubDate>Sun, 18 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/18/CoreData/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/18/CoreData/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>CoreAnimation</title>
        <description>
</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/17/CoreAnimation/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/17/CoreAnimation/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>iOS-UIKit</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/uikit&quot;&gt;Apple官网-UIKit&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/uikit/views_and_controls?changes=latest_major&quot;&gt;Views and Controls&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;UIView and Controls&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Container Views
        &lt;ul&gt;
          &lt;li&gt;Collection Views&lt;/li&gt;
          &lt;li&gt;Table Views&lt;/li&gt;
          &lt;li&gt;UIStackView&lt;/li&gt;
          &lt;li&gt;UIScrollView&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Content Views
        &lt;ul&gt;
          &lt;li&gt;UIActivityIndicatorView&lt;/li&gt;
          &lt;li&gt;UIImageView&lt;/li&gt;
          &lt;li&gt;UIPickerView&lt;/li&gt;
          &lt;li&gt;UIProgressView&lt;/li&gt;
          &lt;li&gt;&lt;del&gt;UIWebView&lt;/del&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Controls
        &lt;ul&gt;
          &lt;li&gt;UIControl&lt;/li&gt;
          &lt;li&gt;UIButton&lt;/li&gt;
          &lt;li&gt;UIDatePicker&lt;/li&gt;
          &lt;li&gt;UIPageControl&lt;/li&gt;
          &lt;li&gt;UISegmentedControl&lt;/li&gt;
          &lt;li&gt;UISlider&lt;/li&gt;
          &lt;li&gt;UIStepper&lt;/li&gt;
          &lt;li&gt;UISwitch&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Text Views
        &lt;ul&gt;
          &lt;li&gt;UILabel&lt;/li&gt;
          &lt;li&gt;UITextField&lt;/li&gt;
          &lt;li&gt;UITextView&lt;/li&gt;
          &lt;li&gt;UISearchTextField&lt;/li&gt;
          &lt;li&gt;UISearchToken&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Visual Effects
        &lt;ul&gt;
          &lt;li&gt;UIVisualEffect&lt;/li&gt;
          &lt;li&gt;UIVisualEffectView&lt;/li&gt;
          &lt;li&gt;UIVibrancyEffect&lt;/li&gt;
          &lt;li&gt;UIBlurEffect&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Bars
        &lt;ul&gt;
          &lt;li&gt;UIBarItem&lt;/li&gt;
          &lt;li&gt;UIBarButtonItem&lt;/li&gt;
          &lt;li&gt;UIBarButtonItemGroup&lt;/li&gt;
          &lt;li&gt;UINavigationBar&lt;/li&gt;
          &lt;li&gt;UISearchBar&lt;/li&gt;
          &lt;li&gt;UIToolbar&lt;/li&gt;
          &lt;li&gt;UITabBar&lt;/li&gt;
          &lt;li&gt;UITabBarItem&lt;/li&gt;
          &lt;li&gt;UIBarPositioning&lt;/li&gt;
          &lt;li&gt;UIBarPositioningDelegate&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Content Viewer
        &lt;ul&gt;
          &lt;li&gt;UILargeContentViewerInteraction&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Related Types
        &lt;ul&gt;
          &lt;li&gt;UIOffset&lt;/li&gt;
          &lt;li&gt;UIEdgeInsets&lt;/li&gt;
          &lt;li&gt;NSDirectionalEdgeInsets&lt;/li&gt;
          &lt;li&gt;NSDirectionalRectEdge&lt;/li&gt;
          &lt;li&gt;NSRectAlignment&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;View Controllers&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Custom View Controllers
        &lt;ul&gt;
          &lt;li&gt;UIViewController&lt;/li&gt;
          &lt;li&gt;UITableViewController&lt;/li&gt;
          &lt;li&gt;UICollectionViewController
            &lt;ul&gt;
              &lt;li&gt;UIContentContainer&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Split View Interface
        &lt;ul&gt;
          &lt;li&gt;UISplitViewController&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Navigation Interface
        &lt;ul&gt;
          &lt;li&gt;UINavigationController&lt;/li&gt;
          &lt;li&gt;UINavigationBar&lt;/li&gt;
          &lt;li&gt;UINavigationItem&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Page View Interface
        &lt;ul&gt;
          &lt;li&gt;UIPageViewController&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tab View Interface
        &lt;ul&gt;
          &lt;li&gt;UITabBarController&lt;/li&gt;
          &lt;li&gt;UITabBar&lt;/li&gt;
          &lt;li&gt;UITabBarItem&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Search Interface
        &lt;ul&gt;
          &lt;li&gt;UISearchContainerViewController&lt;/li&gt;
          &lt;li&gt;UISearchController&lt;/li&gt;
          &lt;li&gt;UISearchBar&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Images and Video
        &lt;ul&gt;
          &lt;li&gt;UIImagePickerController&lt;/li&gt;
          &lt;li&gt;UIVideoEditorController&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Document Previewing
        &lt;ul&gt;
          &lt;li&gt;UIDocumentInteractionController&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;iCloud Sharing
        &lt;ul&gt;
          &lt;li&gt;UICloudSharingController&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

 	- Activities Interface
 		- UIActivityViewController
 		- UIActivityItemProvider
 		- UIActivityItemSource
 		- UIActivity

 	- Font Picker
 		- UIFontPickerViewController
 		- UIFontPickerViewController.Configuration

 	- Word Lookup
 		- UIReferenceLibraryViewController

 	- Printer Picker
 		- UIPrinterPickerController

&lt;ul&gt;
  &lt;li&gt;View Layout
    &lt;ul&gt;
      &lt;li&gt;First Steps
        &lt;ul&gt;
          &lt;li&gt;UIStackView&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Constraints
        &lt;ul&gt;
          &lt;li&gt;NSLayoutConstraint&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Layout Guides
        &lt;ul&gt;
          &lt;li&gt;UILayoutGuide&lt;/li&gt;
          &lt;li&gt;NSLayoutDimension&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Anchors
        &lt;ul&gt;
          &lt;li&gt;NSLayoutAnchor&lt;/li&gt;
          &lt;li&gt;NSLayoutXAxisAnchor&lt;/li&gt;
          &lt;li&gt;NSLayoutYAxisAnchor&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Appearance Customization(外观定制)
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Dark Mode&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Navigation Bar Appearance
        &lt;ul&gt;
          &lt;li&gt;UINavigationBarAppearance&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Toolbar Appearance
        &lt;ul&gt;
          &lt;li&gt;UIToolbarAppearance&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Tab Bar Appearance
        &lt;ul&gt;
          &lt;li&gt;UITabBarAppearance&lt;/li&gt;
          &lt;li&gt;UITabBarItemAppearance&lt;/li&gt;
          &lt;li&gt;UITabBarItemStateAppearance&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Shared Appearance
        &lt;ul&gt;
          &lt;li&gt;UIBarAppearance&lt;/li&gt;
          &lt;li&gt;UIBarButtonItemAppearance&lt;/li&gt;
          &lt;li&gt;UIBarButtonItemStateAppearance&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Appearance Proxies
        &lt;ul&gt;
          &lt;li&gt;UIAppearance&lt;/li&gt;
          &lt;li&gt;UIAppearanceContainer&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Animation and Haptics
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Content Animations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Physics-Based Animations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Parallax Effects(视差影响)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Haptic Feedback&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;UIFeedbackGenerator&lt;/li&gt;
          &lt;li&gt;UIImpactFeedbackGenerator&lt;/li&gt;
          &lt;li&gt;UINotificationFeedbackGenerator&lt;/li&gt;
          &lt;li&gt;UISelectionFeedbackGenerator&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Windows and Screens
    &lt;ul&gt;
      &lt;li&gt;Windows
        &lt;ul&gt;
          &lt;li&gt;UIWidow&lt;/li&gt;
          &lt;li&gt;UICoordinateSpace&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Popovers
        &lt;ul&gt;
          &lt;li&gt;UIPopoverPresentationController&lt;/li&gt;
          &lt;li&gt;UIPopoverBackgroundView&lt;/li&gt;
          &lt;li&gt;UIPopoverBackgroundViewMethods&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Alerts
        &lt;ul&gt;
          &lt;li&gt;UIAlertController&lt;/li&gt;
          &lt;li&gt;UIAlertAction&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Screens
        &lt;ul&gt;
          &lt;li&gt;UIScreen&lt;/li&gt;
          &lt;li&gt;UIScreenMode&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 15 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/15/UIKit/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/15/UIKit/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>Foundation</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/495f5f8045ee&quot;&gt;参考一&lt;/a&gt;
&lt;a href=&quot;https://www.cnblogs.com/kenshincui/p/3885689.html&quot;&gt;参考二&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;nsobject&quot;&gt;NSObject&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;值类型:
    &lt;ul&gt;
      &lt;li&gt;NSAffineTransform&lt;/li&gt;
      &lt;li&gt;NSCalendar&lt;/li&gt;
      &lt;li&gt;NSCache&lt;/li&gt;
      &lt;li&gt;NSValue
        &lt;ul&gt;
          &lt;li&gt;NSValue&lt;/li&gt;
          &lt;li&gt;NSNumber&lt;/li&gt;
          &lt;li&gt;NSDecimalNumber&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSData
        &lt;ul&gt;
          &lt;li&gt;NSMutableData&lt;/li&gt;
          &lt;li&gt;NSPurgeableData&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSDate&lt;/li&gt;
      &lt;li&gt;NSDateComponents&lt;/li&gt;
      &lt;li&gt;NSDecimalNumberHandler&lt;/li&gt;
      &lt;li&gt;NSLocale&lt;/li&gt;
      &lt;li&gt;NSNull&lt;/li&gt;
      &lt;li&gt;NSTimeZone&lt;/li&gt;
      &lt;li&gt;NSValueTransformer&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;XML
    &lt;ul&gt;
      &lt;li&gt;NSXMLParser&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Strings
    &lt;ul&gt;
      &lt;li&gt;NSAttributedString&lt;/li&gt;
      &lt;li&gt;NSCharacterSet&lt;/li&gt;
      &lt;li&gt;NSString&lt;/li&gt;
      &lt;li&gt;NSFormatter
        &lt;ul&gt;
          &lt;li&gt;NSDateFormatter&lt;/li&gt;
          &lt;li&gt;NSNumberFormatter&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSScanner&lt;/li&gt;
      &lt;li&gt;NSSortDescriptor&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Collections
    &lt;ul&gt;
      &lt;li&gt;NSArray
        &lt;ul&gt;
          &lt;li&gt;NSMutableArray&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSDictionary
        &lt;ul&gt;
          &lt;li&gt;NSMutableDictionary&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSNumerator
        &lt;ul&gt;
          &lt;li&gt;NSDirectoryEnumerator&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSHashTable&lt;/li&gt;
      &lt;li&gt;NSIndexPath&lt;/li&gt;
      &lt;li&gt;NSIndexSet
        &lt;ul&gt;
          &lt;li&gt;NSMutableIndexSet&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSMapTable&lt;/li&gt;
      &lt;li&gt;NSPointerArray&lt;/li&gt;
      &lt;li&gt;NSPointerFunctions&lt;/li&gt;
      &lt;li&gt;NSSet
        &lt;ul&gt;
          &lt;li&gt;NSMutableSet&lt;/li&gt;
          &lt;li&gt;NSCountedSet&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Predicates
    &lt;ul&gt;
      &lt;li&gt;NSExpression&lt;/li&gt;
      &lt;li&gt;NSPredicate
        &lt;ul&gt;
          &lt;li&gt;NSComparisonPredicate&lt;/li&gt;
          &lt;li&gt;NSCompoundPredicate&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Operating-System Services
    &lt;ul&gt;
      &lt;li&gt;NSError&lt;/li&gt;
      &lt;li&gt;NSHost&lt;/li&gt;
      &lt;li&gt;NSNetService&lt;/li&gt;
      &lt;li&gt;NSNetServiceBrowser&lt;/li&gt;
      &lt;li&gt;NSOrthography&lt;/li&gt;
      &lt;li&gt;NSProcessInfo&lt;/li&gt;
      &lt;li&gt;NSRunLoop&lt;/li&gt;
      &lt;li&gt;NSSpeliServer&lt;/li&gt;
      &lt;li&gt;NSTextCheckingResult&lt;/li&gt;
      &lt;li&gt;NSTimer&lt;/li&gt;
      &lt;li&gt;NSUserDefaults&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;File System
    &lt;ul&gt;
      &lt;li&gt;NSBundle&lt;/li&gt;
      &lt;li&gt;NSFileHandler&lt;/li&gt;
      &lt;li&gt;NSFileManager&lt;/li&gt;
      &lt;li&gt;NSMetadataItem&lt;/li&gt;
      &lt;li&gt;NSMetadataQuery&lt;/li&gt;
      &lt;li&gt;NSMetadataQueryAttributeValueTuple&lt;/li&gt;
      &lt;li&gt;NSMetadataQueryResuleGroup&lt;/li&gt;
      &lt;li&gt;NSStream
        &lt;ul&gt;
          &lt;li&gt;NSInputStream&lt;/li&gt;
          &lt;li&gt;NSOutputStream&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;URL
    &lt;ul&gt;
      &lt;li&gt;NSCachedURLResponse&lt;/li&gt;
      &lt;li&gt;NSHTTPCookie&lt;/li&gt;
      &lt;li&gt;NSHTTPCookieStorage&lt;/li&gt;
      &lt;li&gt;NSURL&lt;/li&gt;
      &lt;li&gt;NSURLAuthorizationChallenge&lt;/li&gt;
      &lt;li&gt;NSURLCache&lt;/li&gt;
      &lt;li&gt;NSURLSession&lt;/li&gt;
      &lt;li&gt;NSURLCredential&lt;/li&gt;
      &lt;li&gt;NSURLCredentialStorage&lt;/li&gt;
      &lt;li&gt;NSURLDownload&lt;/li&gt;
      &lt;li&gt;NSURLProtectionSpace&lt;/li&gt;
      &lt;li&gt;NSURLProtocol&lt;/li&gt;
      &lt;li&gt;NSURLRequest
        &lt;ul&gt;
          &lt;li&gt;NSMutableURLRequest&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSURLResponse
        &lt;ul&gt;
          &lt;li&gt;NSHTTPURLResponse&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Interprocess Communication
    &lt;ul&gt;
      &lt;li&gt;NSPipe&lt;/li&gt;
      &lt;li&gt;NSPort
        &lt;ul&gt;
          &lt;li&gt;NSMachPort&lt;/li&gt;
          &lt;li&gt;NSMessagePort&lt;/li&gt;
          &lt;li&gt;NSSockerPort&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSPortMessage&lt;/li&gt;
      &lt;li&gt;NSPortNameServer
        &lt;ul&gt;
          &lt;li&gt;NSMachBootstrapServer&lt;/li&gt;
          &lt;li&gt;NSMessagePortNameServer&lt;/li&gt;
          &lt;li&gt;NSSockerPortNameServer&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Locking-Threading
    &lt;ul&gt;
      &lt;li&gt;NSConditionLock&lt;/li&gt;
      &lt;li&gt;NSDistributedLock&lt;/li&gt;
      &lt;li&gt;NSLock&lt;/li&gt;
      &lt;li&gt;NSOperation
        &lt;ul&gt;
          &lt;li&gt;NSBlockOperation&lt;/li&gt;
          &lt;li&gt;NSInvocationOperation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSOperationQueue&lt;/li&gt;
      &lt;li&gt;NSRecursiveLock&lt;/li&gt;
      &lt;li&gt;NSTask&lt;/li&gt;
      &lt;li&gt;NSThread&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Notifications
    &lt;ul&gt;
      &lt;li&gt;NSNotification&lt;/li&gt;
      &lt;li&gt;NSNotificationCenter
        &lt;ul&gt;
          &lt;li&gt;NSNotificationQueue&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Archiving and Serialization
    &lt;ul&gt;
      &lt;li&gt;NSCoder
        &lt;ul&gt;
          &lt;li&gt;NSArchiver&lt;/li&gt;
          &lt;li&gt;NSKeyedArchiver&lt;/li&gt;
          &lt;li&gt;NSKeyedUnArchiver&lt;/li&gt;
          &lt;li&gt;NSPortCoder&lt;/li&gt;
          &lt;li&gt;NSUnarchiver&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NSPropertyListSerialization&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Objective-C Language Service
    &lt;ul&gt;
      &lt;li&gt;NSSeertionHandler&lt;/li&gt;
      &lt;li&gt;NSAutoreleasePool&lt;/li&gt;
      &lt;li&gt;NSClassDescription&lt;/li&gt;
      &lt;li&gt;NSException&lt;/li&gt;
      &lt;li&gt;NSInvocation&lt;/li&gt;
      &lt;li&gt;NSMethodSignature&lt;/li&gt;
      &lt;li&gt;NSUndoManager&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nsproxy&quot;&gt;NSProxy&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- [NSProxy1](https://blog.csdn.net/shubinniu/article/details/80895450)
- [消息转发](https://blog.csdn.net/liyanjun201/article/details/82620485)
- [NSProxy1](https://juejin.im/post/5afbca7bf265da0b8c25251d)

- NSProxy可以帮助Objective-C间接的实现多重继承的功能。
- OC 中一个类只有一个父类, 这就是单一继承, 但是我们可以用协议和 NSProxy 实现多继承
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 14 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/14/Foundation/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/14/Foundation/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>iOS系统框架</title>
        <description>&lt;h4 id=&quot;apple系统框架&quot;&gt;&lt;a href=&quot;https://developer.apple.com/documentation/&quot;&gt;Apple系统框架&lt;/a&gt;&lt;/h4&gt;

&lt;h3 id=&quot;ios系统层级&quot;&gt;iOS系统层级&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;可触摸层（Cocoa Touch Layer）&lt;/li&gt;
  &lt;li&gt;媒体层（Media Layer）&lt;/li&gt;
  &lt;li&gt;核心服务层（Core Services Layer）&lt;/li&gt;
  &lt;li&gt;核心系统层（Core OS Layer）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/iOS系统层级1.jpg&quot; alt=&quot;iOS系统层级&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;各层的详情&quot;&gt;各层的详情&lt;/h3&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Cocoa Touch Layer
    &lt;ul&gt;
      &lt;li&gt;UIKit（界面相关）&lt;/li&gt;
      &lt;li&gt;EventKit（日历事件提醒等）&lt;/li&gt;
      &lt;li&gt;Notification Center（通知中心）&lt;/li&gt;
      &lt;li&gt;MapKit（地图显示）&lt;/li&gt;
      &lt;li&gt;Address Book（联系人）&lt;/li&gt;
      &lt;li&gt;iAd（广告）&lt;/li&gt;
      &lt;li&gt;Message UI（邮件与SMS显示）&lt;/li&gt;
      &lt;li&gt;PushKit（iOS8新push机制）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Media Layer&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;图像引擎
        &lt;ul&gt;
          &lt;li&gt;Core Graphics&lt;/li&gt;
          &lt;li&gt;Core Image&lt;/li&gt;
          &lt;li&gt;Core Animation&lt;/li&gt;
          &lt;li&gt;OpenGL ES&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;音频引擎
        &lt;ul&gt;
          &lt;li&gt;Core Audio&lt;/li&gt;
          &lt;li&gt;AV Foundation&lt;/li&gt;
          &lt;li&gt;OpenAL&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;视频引擎
        &lt;ul&gt;
          &lt;li&gt;AV Foundation&lt;/li&gt;
          &lt;li&gt;Core Media）&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Core Services Layer
    &lt;ul&gt;
      &lt;li&gt;CFNetwork（网络访问）&lt;/li&gt;
      &lt;li&gt;CoreData（数据存储）&lt;/li&gt;
      &lt;li&gt;CoreLocation（定位功能）&lt;/li&gt;
      &lt;li&gt;CoreMotion（重力加速度，陀螺仪）&lt;/li&gt;
      &lt;li&gt;Foundation（基础功能如NSString）&lt;/li&gt;
      &lt;li&gt;Webkit（浏览器引擎）&lt;/li&gt;
      &lt;li&gt;JavaScript（JavaScript引擎）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Core OS Layer
    &lt;ul&gt;
      &lt;li&gt;操作系统内核服务（BSD sockets、I/O访问、内存申请、文件系统、数学计算等）&lt;/li&gt;
      &lt;li&gt;本地认证（指纹识别验证等）&lt;/li&gt;
      &lt;li&gt;安全（提供管理证书、公钥、密钥等的接口）&lt;/li&gt;
      &lt;li&gt;加速 (执行数学、大数字以及DSP运算,这些接口iOS设备硬件相匹配）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/iOS系统层级2.png&quot; alt=&quot;iOS系统层级&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;很重要的几个框架&quot;&gt;很重要的几个框架&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Foundation
    &lt;ul&gt;
      &lt;li&gt;为所有的应用程序提供基本系统服务&lt;/li&gt;
      &lt;li&gt;你的应用程序，UIKit是建立在Foundation框架上面的。&lt;/li&gt;
      &lt;li&gt;Foundation框架是用Objective-C对Core Foundation框架里许多特性的封装。&lt;/li&gt;
      &lt;li&gt;使用Foundation可以:
        &lt;ul&gt;
          &lt;li&gt;创建和管理集合，比如：数组和字典&lt;/li&gt;
          &lt;li&gt;访问存储在应用程序里的图片和其它资源&lt;/li&gt;
          &lt;li&gt;创建和管理字符串&lt;/li&gt;
          &lt;li&gt;提交和接收通知&lt;/li&gt;
          &lt;li&gt;创建日期和时间对象&lt;/li&gt;
          &lt;li&gt;自动发现IP网络上的设备&lt;/li&gt;
          &lt;li&gt;操作URL流&lt;/li&gt;
          &lt;li&gt;执行异步代码&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;UIKit
    &lt;ul&gt;
      &lt;li&gt;框架提供创建基于触摸用户界面的类&lt;/li&gt;
      &lt;li&gt;所有的iOS应用程序都基于UIKit，你不能是应用程序脱离这个框架。&lt;/li&gt;
      &lt;li&gt;UIKit提供了在屏幕上绘制的机制，捕获事件，和创建通用用户界面元素。&lt;/li&gt;
      &lt;li&gt;UIKit也通过管理显示在屏幕上的组件来组织复杂的项目。&lt;/li&gt;
      &lt;li&gt;使用UIKit可以：
        &lt;ul&gt;
          &lt;li&gt;构建和管理你的用户界面&lt;/li&gt;
          &lt;li&gt;捕获触摸和基于移动的事件&lt;/li&gt;
          &lt;li&gt;呈现文字和web内容&lt;/li&gt;
          &lt;li&gt;优化你的多任务程序&lt;/li&gt;
          &lt;li&gt;创建定制的用户界面元素&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CoreData
    &lt;ul&gt;
      &lt;li&gt;框架管着理应用程序数据模型&lt;/li&gt;
      &lt;li&gt;Core Data提供对象的管理，使用CoreData，你可以创建模型对象，并管理这些对象。&lt;/li&gt;
      &lt;li&gt;你管理这些对象间的联系并修改数据。&lt;/li&gt;
      &lt;li&gt;CoreData提供的内建SQLlite技术可以高效的管理数据。&lt;/li&gt;
      &lt;li&gt;使用Core Data可以：
        &lt;ul&gt;
          &lt;li&gt;在库里存储和接收对象&lt;/li&gt;
          &lt;li&gt;提供基本的undo/redo&lt;/li&gt;
          &lt;li&gt;自动验证属性值&lt;/li&gt;
          &lt;li&gt;过滤、分组和优化内存中的数据&lt;/li&gt;
          &lt;li&gt;用[NSFetchedResultsController]管理表视图中的结果&lt;/li&gt;
          &lt;li&gt;支持基于文档的应用程序&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Core Graphics框架帮助你创建图形
    &lt;ul&gt;
      &lt;li&gt;高质量的图形对于所有的iOS应用程序都是很重要的。&lt;/li&gt;
      &lt;li&gt;在iOS中最简单且最快捷的创建图形的方式是使用UIKit框架提供的基于预渲染图形的视图和控件，然后让UIKit和iOS完成绘制。&lt;/li&gt;
      &lt;li&gt;当你需要创建复杂的图形时，Core Graphics则提供了更底层的库来帮助你。&lt;/li&gt;
      &lt;li&gt;使用Core Graphics可以：
        &lt;ul&gt;
          &lt;li&gt;创建基于路径的绘图&lt;/li&gt;
          &lt;li&gt;抗锯齿渲染&lt;/li&gt;
          &lt;li&gt;添加梯度、图片和颜色&lt;/li&gt;
          &lt;li&gt;Use coordinate-space transformations.&lt;/li&gt;
          &lt;li&gt;创建、显示和分析PDF文档&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Core Animation允许你创建高级的动画和虚拟效果
    &lt;ul&gt;
      &lt;li&gt;UIKit提供建立在Core Animation之上的动画。&lt;/li&gt;
      &lt;li&gt;如果你需要比UIKit能力更高级的功能，可以直接使用Core Animation。&lt;/li&gt;
      &lt;li&gt;Core Animation接口包含在QuartzCore框架里。&lt;/li&gt;
      &lt;li&gt;使用Core Animation可以创建嵌套的对象，并且可以对它们操作、旋转、缩放和转换。&lt;/li&gt;
      &lt;li&gt;使用Core animation，你可以创建动态的用户界面而不用使用更底层的图形API，如OpenGL ES。&lt;/li&gt;
      &lt;li&gt;使用Core Animation可以：
        &lt;ul&gt;
          &lt;li&gt;创建定制动画&lt;/li&gt;
          &lt;li&gt;添加定时函数和图形&lt;/li&gt;
          &lt;li&gt;支持帧动画&lt;/li&gt;
          &lt;li&gt;Specify graphical layout constraints.&lt;/li&gt;
          &lt;li&gt;Group multiple-layer changes into anatomic update.&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OpenGL ES 框架提供2D和3D绘图工具
    &lt;ul&gt;
      &lt;li&gt;OpenGL ES支持2D和3D绘图，Apple的OpenGL ES实现通过硬件提供了高速的全屏游戏式的应用程序。&lt;/li&gt;
      &lt;li&gt;使用OpenGL ES可以：
        &lt;ul&gt;
          &lt;li&gt;创建2D和3D图形&lt;/li&gt;
          &lt;li&gt;创建更复杂的图形，比如数据虚拟化、模拟飞行，或者视频游戏&lt;/li&gt;
          &lt;li&gt;访问底层图形设备&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;这些构成了iOS/MacOS的骨架
是最大层次的架构&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Tue, 13 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/13/iOS%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/13/iOS%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/</guid>
        
        <category>【移动端】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
      <item>
        <title>《去中心化应用》</title>
        <description>&lt;h4 id=&quot;索引&quot;&gt;索引&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;什么是去中心化应用?&lt;/li&gt;
  &lt;li&gt;去中心化生态系统&lt;/li&gt;
  &lt;li&gt;怎么创建你的去中心化应用?&lt;/li&gt;
  &lt;li&gt;实例OpenBazazaar?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;什么是去中心化应用&quot;&gt;什么是去中心化应用?&lt;/h3&gt;

&lt;h4 id=&quot;1-应用的分类&quot;&gt;1. 应用的分类&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;集中式&lt;/li&gt;
  &lt;li&gt;分布式&lt;/li&gt;
  &lt;li&gt;去中心化&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;能够达成去中心化共识的应用软件才是真正的革新成果.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-去中心化应用dapp的4个特征&quot;&gt;2. 去中心化应用(dapp)的4个特征&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;开源
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/philosophy/free-sw.zh-cn.html&quot;&gt;自由软件&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;⚠️ 很多国内的程序猿对开源完全没概念,这一块要重点理解一下&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;内部货币
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;去中心化共识
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;没有中心失效点
  -
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-去中心化应用的历史&quot;&gt;3. 去中心化应用的历史&lt;/h4&gt;

&lt;h3 id=&quot;去中心化生态系统&quot;&gt;去中心化生态系统&lt;/h3&gt;

&lt;h3 id=&quot;怎么创建你的去中心化应用&quot;&gt;怎么创建你的去中心化应用?&lt;/h3&gt;

&lt;h3 id=&quot;实例openbazazaar&quot;&gt;实例OpenBazazaar?&lt;/h3&gt;
</description>
        <pubDate>Tue, 30 Jul 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/30/%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E5%BA%94%E7%94%A8/</guid>
        
        <category>【书籍】</category>
        
        
        <category>【区块链】</category>
        
      </item>
    
      <item>
        <title>Swift</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;世界上没有最好的编程语言，就像世界上没有最好的人一样。&lt;/p&gt;

  &lt;p&gt;如果你想知道一门编程语言的优劣，那就去学会它。&lt;/p&gt;

&lt;/blockquote&gt;

</description>
        <pubDate>Sun, 28 Jul 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/28/Swift/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/28/Swift/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Kotlin</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;世界上没有最好的编程语言，就像世界上没有最好的人一样。&lt;/p&gt;

  &lt;p&gt;如果你想知道一门编程语言的优劣，那就去学会它。&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;用Kotlin也快一年，最近总觉的对它熟悉又陌生,不由的重新学习一下这门语言。&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&quot;这门语言最舒服的地方&quot;&gt;这门语言最舒服的地方&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;可空类型：判空的代码省了&lt;/li&gt;
  &lt;li&gt;when，强大的分支结构：已知的编程语言中最强&lt;/li&gt;
  &lt;li&gt;if，可以做为表达式： 不用再另外生命变量&lt;/li&gt;
  &lt;li&gt;object，语法层面的单例&lt;/li&gt;
  &lt;li&gt;闭包，很实用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&quot;整体介绍&quot;&gt;整体介绍&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;开发工具
    &lt;ul&gt;
      &lt;li&gt;Intellij IDEA:&lt;/li&gt;
      &lt;li&gt;Sublime Text:&lt;/li&gt;
      &lt;li&gt;Vscode:&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向过程
    &lt;ul&gt;
      &lt;li&gt;基本语法和规范
        &lt;ul&gt;
          &lt;li&gt;变量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;var a = “hello”&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;常量
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;val a = “name”  // 运行期常量&lt;/li&gt;
                &lt;li&gt;const val co = “常量” //编译器常量,只能用于顶层常量或对象中的常量声明，只能是String和基础数据类型&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;注释
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;// 单行注释&lt;/li&gt;
                &lt;li&gt;/* 块注释 */&lt;/li&gt;
                &lt;li&gt;/* /&lt;em&gt;嵌套注释&lt;/em&gt;/ */&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
            &lt;ul&gt;
              &lt;li&gt;文件注释
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;版权信息&lt;/li&gt;
                    &lt;li&gt;许可信息&lt;/li&gt;
                    &lt;li&gt;描述&lt;/li&gt;
                    &lt;li&gt;历史版本&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;文档注释: 公开SDK
                &lt;ul&gt;
                  &lt;li&gt;Kdoc
                    &lt;blockquote&gt;
                      &lt;ul&gt;
                        &lt;li&gt;@author&lt;/li&gt;
                        &lt;li&gt;@deprecated&lt;/li&gt;
                        &lt;li&gt;@param&lt;/li&gt;
                        &lt;li&gt;@return&lt;/li&gt;
                        &lt;li&gt;@version&lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;代码注释: 阅读源码参考&lt;/li&gt;
              &lt;li&gt;地标注释: IDE提供的功能
                &lt;ul&gt;
                  &lt;li&gt;//TODO: 代码未完成&lt;/li&gt;
                  &lt;li&gt;//FIXME: 代码错误，待修正&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;命名规范
            &lt;ul&gt;
              &lt;li&gt;包名: 全小写，可用点分割&lt;/li&gt;
              &lt;li&gt;类名、接口: 大驼峰&lt;/li&gt;
              &lt;li&gt;文件名: 大驼峰&lt;/li&gt;
              &lt;li&gt;变量名: 小驼峰&lt;/li&gt;
              &lt;li&gt;编译器常量: 全大写，可以加下划线&lt;/li&gt;
              &lt;li&gt;函数名: 小驼峰&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;代码排版
            &lt;ul&gt;
              &lt;li&gt;空行
                &lt;ul&gt;
                  &lt;li&gt;代码注释之后（除尾端注释）&lt;/li&gt;
                  &lt;li&gt;函数内第一条语句之前&lt;/li&gt;
                  &lt;li&gt;一个函数内部两个逻辑段&lt;/li&gt;
                  &lt;li&gt;类声明或接口声明之间&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;空格
                &lt;ul&gt;
                  &lt;li&gt;赋值符号&lt;/li&gt;
                  &lt;li&gt;二元运算符&lt;/li&gt;
                  &lt;li&gt;小括号前后&lt;/li&gt;
                  &lt;li&gt;函数参数之间&lt;/li&gt;
                  &lt;li&gt;类继承，接口实现&lt;/li&gt;
                  &lt;li&gt;lambda表达式大括号左右&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;缩紧
                &lt;ul&gt;
                  &lt;li&gt;4个空格&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;断行
                &lt;ul&gt;
                  &lt;li&gt;逗号后，运算符前&lt;/li&gt;
                  &lt;li&gt;类声明时&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;省略
                &lt;ul&gt;
                  &lt;li&gt;分号&lt;/li&gt;
                  &lt;li&gt;省略Unit&lt;/li&gt;
                  &lt;li&gt;lambda参数&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;数据类型
        &lt;ul&gt;
          &lt;li&gt;整数
            &lt;ul&gt;
              &lt;li&gt;Byte
                &lt;ul&gt;
                  &lt;li&gt;8位&lt;/li&gt;
                  &lt;li&gt;-128～127&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Short
                &lt;ul&gt;
                  &lt;li&gt;16位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 15 ~ 2 ^ 15 - 1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Int
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 31 ~ 2 ^ 31 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Long
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;-2 ^ 63 ~ 2 ^ 63 -1&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;浮点数
            &lt;ul&gt;
              &lt;li&gt;Float
                &lt;ul&gt;
                  &lt;li&gt;32位&lt;/li&gt;
                  &lt;li&gt;3.0F&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;Double
                &lt;ul&gt;
                  &lt;li&gt;64位&lt;/li&gt;
                  &lt;li&gt;默认小数为double&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;科学计数
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;3.14e15&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符类型
            &lt;ul&gt;
              &lt;li&gt;Kotlin字符采用双字节Unicode编码（16位）&lt;/li&gt;
              &lt;li&gt;可以使用16进制表示
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;val a = ‘A’&lt;/li&gt;
                    &lt;li&gt;val b = ‘\u0041’&lt;/li&gt;
                    &lt;li&gt;val c = ‘码’&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
              &lt;li&gt;制表符
                &lt;blockquote&gt;
                  &lt;ul&gt;
                    &lt;li&gt;\t  \u0009 Tab&lt;/li&gt;
                    &lt;li&gt;\n  \u000a 换行&lt;/li&gt;
                    &lt;li&gt;\r  \u000d 回车&lt;/li&gt;
                    &lt;li&gt;&quot;  \u0022 双引号&lt;/li&gt;
                    &lt;li&gt;'  \u0027 单引号&lt;/li&gt;
                    &lt;li&gt;\  \u005c 反斜线&lt;/li&gt;
                    &lt;li&gt;$  \u0024 美元符号&lt;/li&gt;
                    &lt;li&gt;\b  \u0008 退格&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;/blockquote&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;布尔类型
            &lt;ul&gt;
              &lt;li&gt;true&lt;/li&gt;
              &lt;li&gt;false&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;数据类型之间的转换
            &lt;ul&gt;
              &lt;li&gt;toXXX(): 转换函数&lt;/li&gt;
              &lt;li&gt;⚠️ 大范围转小范围会存在进度丢失的风险&lt;/li&gt;
              &lt;li&gt;隐式转换优先度: double &amp;gt; float &amp;gt; Long &amp;gt; Int&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;可空类型
            &lt;ul&gt;
              &lt;li&gt;防止空指针异常&lt;/li&gt;
              &lt;li&gt;可空运算
                &lt;ul&gt;
                  &lt;li&gt;安全调用运算 ?.&lt;/li&gt;
                  &lt;li&gt;as?&lt;/li&gt;
                  &lt;li&gt;Elvis运算符 ?:&lt;/li&gt;
                  &lt;li&gt;非空断言!!&lt;/li&gt;
                  &lt;li&gt;let&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;字符串类型
            &lt;ul&gt;
              &lt;li&gt;普通字符串&lt;/li&gt;
              &lt;li&gt;原始字符串
                &lt;ul&gt;
                  &lt;li&gt;可以包含任何字符，不能包含转移字符&lt;/li&gt;
                  &lt;li&gt;== 判断两个对象内容是否相等&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;不可变字符串
                &lt;ul&gt;
                  &lt;li&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;字符串操作
                &lt;ul&gt;
                  &lt;li&gt;拼接
                    &lt;ul&gt;
                      &lt;li&gt;a + b&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;模版
                    &lt;ul&gt;
                      &lt;li&gt;$x&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;查找
                    &lt;ul&gt;
                      &lt;li&gt;indexOf: 从x开始往后查&lt;/li&gt;
                      &lt;li&gt;lastIndexOf: 从x开始由后向前查&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;比较
                    &lt;ul&gt;
                      &lt;li&gt;相等&lt;/li&gt;
                      &lt;li&gt;比较大小&lt;/li&gt;
                      &lt;li&gt;比较前后缀&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串截取
                    &lt;ul&gt;
                      &lt;li&gt;区间截取: 左闭右开区间&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;可变字符串
                &lt;ul&gt;
                  &lt;li&gt;StringBuilder&lt;/li&gt;
                  &lt;li&gt;追加&lt;/li&gt;
                  &lt;li&gt;插入&lt;/li&gt;
                  &lt;li&gt;删除&lt;/li&gt;
                  &lt;li&gt;替换&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;正则表达式
                &lt;ul&gt;
                  &lt;li&gt;Regex&lt;/li&gt;
                  &lt;li&gt;字符串匹配
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).matchs(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串查找
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;&quot;\d+&quot;&quot;&quot;).find(&quot;1233&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串替换
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).replace(&quot;123mmm&quot;, &quot;&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                  &lt;li&gt;字符串分割
                    &lt;blockquote&gt;
                      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Regex(&quot;&quot;&quot;\d+&quot;&quot;&quot;).split(&quot;123mmm&quot;)&lt;/code&gt;&lt;/p&gt;
                    &lt;/blockquote&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;运算符
        &lt;ul&gt;
          &lt;li&gt;算术运算符
            &lt;ul&gt;
              &lt;li&gt;一元运算符
                &lt;ul&gt;
                  &lt;li&gt;取反符号: &lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自加: &lt;code class=&quot;highlighter-rouge&quot;&gt;++&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;自减: &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;二元运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a + b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a - b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a * b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a / b&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a % b&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;算术赋值运算符
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a += 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a -= 1&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a *= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a /= 2&lt;/code&gt;&lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a %= 2&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;关系运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;== 、&amp;gt;、&amp;lt;、&amp;gt;=、&amp;lt;= 、===、!==&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;逻辑运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;、|| &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;位运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inv 位反&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;and 位与&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;or  位或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xor 位异或&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shr 有符号右移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shl 左移&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ushr 无符号右移&lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;其他运算符
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Class A : B()、()、[]、.=、?、?.、?:、!!、::、..、-&amp;gt; 、* &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;运算符优先级（从高到低）
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;++ 、-- 、 . 、 ?. 、？&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-、 + 、 ++ 、-- 、！&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:、as、as?&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;* 、 / 、%&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+、-&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;..&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;中缀运算符&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Elvis运算符 ?:&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;in、!in、is、!is&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;、&amp;gt;、&amp;lt;=、&amp;gt;=&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;==、!=、===、!==&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;|| &lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=、+=、-=、*= 、/= 、%= &lt;/code&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;控制流
        &lt;ul&gt;
          &lt;li&gt;if
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if(true) a = 1&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = if(true) &quot;&quot; else null&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;when
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;when() {} &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val a = when(name)&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;while {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do {} while&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for () {}&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;break
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;break@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;continue
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;label@ for (x in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (y in 0..8) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;if (x == y ) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;continue@label&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;函数
        &lt;ul&gt;
          &lt;li&gt;函数声明&lt;/li&gt;
          &lt;li&gt;命名参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;默认参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(a: Int, b: Int, c: Int = 1): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return a + b + c &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;可变参数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun add(vararg numbers: Int): Int {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;var total = 0.0&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;for (number in numbers) {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;total += number &lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;return total&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;表达式函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun area(x: Int, y: Int) = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;局部函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;fun func() {&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;/li&gt;
                &lt;li&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
          &lt;li&gt;匿名函数
            &lt;blockquote&gt;
              &lt;ul&gt;
                &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;val oneF = fun(x: Int, y:Int): Int = x * y&lt;/code&gt;&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/blockquote&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;面向对象
    &lt;ul&gt;
      &lt;li&gt;类&lt;/li&gt;
      &lt;li&gt;封装&lt;/li&gt;
      &lt;li&gt;继承&lt;/li&gt;
      &lt;li&gt;多态&lt;/li&gt;
      &lt;li&gt;抽象类/接口&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;函数式编程
    &lt;ul&gt;
      &lt;li&gt;高阶函数&lt;/li&gt;
      &lt;li&gt;Lambda&lt;/li&gt;
      &lt;li&gt;闭包&lt;/li&gt;
      &lt;li&gt;内联函数&lt;/li&gt;
      &lt;li&gt;范型&lt;/li&gt;
      &lt;li&gt;数据容器&lt;/li&gt;
      &lt;li&gt;函数式API&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;通用模式
    &lt;ul&gt;
      &lt;li&gt;异常处理&lt;/li&gt;
      &lt;li&gt;线程&lt;/li&gt;
      &lt;li&gt;协程&lt;/li&gt;
      &lt;li&gt;I/O&lt;/li&gt;
      &lt;li&gt;文件管理&lt;/li&gt;
      &lt;li&gt;网络编程&lt;/li&gt;
      &lt;li&gt;GUI编程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Java特性
    &lt;ul&gt;
      &lt;li&gt;反射&lt;/li&gt;
      &lt;li&gt;注解&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 21 Jul 2019 10:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/21/Kotlin/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/21/Kotlin/</guid>
        
        <category>【编程语言】</category>
        
        
        <category>【读书】</category>
        
      </item>
    
      <item>
        <title>Apple那些事</title>
        <description>&lt;h3 id=&quot;证书申请那些事&quot;&gt;证书申请那些事&lt;/h3&gt;

&lt;h3 id=&quot;打包那些事&quot;&gt;打包那些事&lt;/h3&gt;

&lt;h3 id=&quot;苹果资源那些事&quot;&gt;苹果资源那些事&lt;/h3&gt;

&lt;h3 id=&quot;你可能不知的关于苹果的事&quot;&gt;你可能不知的关于苹果的事&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的敬仰&quot;&gt;对苹果的敬仰&lt;/h3&gt;

&lt;h3 id=&quot;对苹果的惋惜&quot;&gt;对苹果的惋惜&lt;/h3&gt;

</description>
        <pubDate>Sat, 06 Jul 2019 08:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/07/06/Apple%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
        
        <category>【方法】</category>
        
        
        <category>【iOS】</category>
        
      </item>
    
  </channel>
</rss>
